(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    204594,       4743]
NotebookOptionsPosition[    201606,       4640]
NotebookOutlinePosition[    201991,       4656]
CellTagsIndexPosition[    201948,       4653]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["A Examples for Quantum Interval-valued Probability Measures", "Section",
 CellChangeTimes->{3.688786243042425*^9}],

Cell["\<\
http://mathematica.stackexchange.com/questions/16413/how-to-draw-a-great-\
circle-on-a-sphere\
\>", "Text",
 CellChangeTimes->{3.6768465566438527`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"(*", 
   RowBox[{
   "Rotation", " ", "deg\[Degree]", " ", "out", " ", "of", " ", "the", " ", 
    "xy", " ", "plane"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"rx", "=", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{
       RowBox[{"deg", " ", "Degree"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Spin", " ", "around", " ", "z", " ", "axis"}], "*)"}], 
    RowBox[{"rz", "=", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{
       RowBox[{"\[Phi]", " ", "Degree"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}], "=", 
     RowBox[{"rz", "@", 
      RowBox[{"rx", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
             RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "u"}], "}"}], 
              "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "v"}], "}"}], 
              "]"}]}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "u"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}], ",", 
            RowBox[{"(*", 
             RowBox[{
             "The", " ", "great", " ", "circle", " ", "in", " ", "question"}],
              "*)"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Normal", " ", "unit", " ", "circle"}], "*)"}], 
            RowBox[{
             RowBox[{"RotationTransform", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "/@", 
             RowBox[{"{", 
              RowBox[{"u", ",", 
               RowBox[{"-", "u"}]}], "}"}]}]}], " ", 
           RowBox[{"(*", 
            RowBox[{"The", " ", "red", " ", "dashed", " ", "stuff"}], "*)"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", "Thick"}], "]"}], ",", "Black", ",", 
             RowBox[{"Directive", "[", 
              RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}]}]}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"deg", ",", "15", ",", "\"\<Inclination\>\""}], "}"}], ",", 
     RowBox[{"-", "180"}], ",", "180"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", "360"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676846523128338*^9, 3.6768465231533384`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`deg$$ = 15, $CellContext`\[Phi]$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`deg$$], 15, "Inclination"}, -180, 180}, {
      Hold[$CellContext`\[Phi]$$], 0, 360}}, Typeset`size$$ = {
    360., {199., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`deg$2160$$ = 
    0, $CellContext`\[Phi]$2161$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`deg$$ = 15, $CellContext`\[Phi]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`deg$$, $CellContext`deg$2160$$, 0], 
        Hold[$CellContext`\[Phi]$$, $CellContext`\[Phi]$2161$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`rx = 
        RotationTransform[$CellContext`deg$$ Degree, {0, 1, 
          0}]; $CellContext`rz = 
        RotationTransform[$CellContext`\[Phi]$$ Degree, {0, 0, 
          1}]; {$CellContext`u, $CellContext`v} = $CellContext`rz[
          $CellContext`rx[{{1, 0, 0}, {0, 1, 0}}]]; Show[{
          Graphics3D[{{
             Opacity[0.4], 
             Sphere[]}, {
             Opacity[0.5], 
             Polygon[{{-1, -1, 0}, {1, -1, 0}, {1, 1, 0}, {-1, 1, 0}}]}, {
             Arrow[{{0, 0, 0}, $CellContext`u}], 
             Arrow[{{0, 0, 0}, $CellContext`v}]}}], 
          
          ParametricPlot3D[{
           Cos[$CellContext`\[Theta]] $CellContext`u + 
            Sin[$CellContext`\[Theta]] $CellContext`v, {
             Cos[$CellContext`\[Theta]], 
             Sin[$CellContext`\[Theta]], 0}, 
            Map[
             
             RotationTransform[$CellContext`\[Theta], {0, 0, 
              1}], {$CellContext`u, -$CellContext`u}]}, \
{$CellContext`\[Theta], -Pi, Pi}, PlotStyle -> {
             Directive[Blue, Thick], Black, 
             Directive[Red, Dashed]}]}, Axes -> True, 
         AxesLabel -> {"x", "y", "z"}]), 
      "Specifications" :> {{{$CellContext`deg$$, 15, "Inclination"}, -180, 
         180}, {$CellContext`\[Phi]$$, 0, 360}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {256., 263.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6768465254633737`*^9, 3.6768465608514175`*^9, 3.6768937917299557`*^9, 
   3.6769377615430403`*^9, 3.6769382316652613`*^9, 3.6769398311285133`*^9, 
   3.6769399857358885`*^9, 3.6769914097572017`*^9, 3.6769937763085513`*^9, 
   3.6769938436995864`*^9, 3.6771057099302797`*^9, {3.6771057904303923`*^9, 
   3.677105813770425*^9}, 3.677449677312496*^9, 3.677452930262554*^9, 
   3.68376303341041*^9, 3.683765093511241*^9, 3.683765727950529*^9, 
   3.6837671080064635`*^9, {3.683767145333599*^9, 3.6837671613975177`*^9}, 
   3.6837673273560095`*^9, 3.683767398939104*^9, 3.683768240482238*^9, 
   3.683768288942009*^9, 3.683768586023674*^9, 3.6887863283363037`*^9, 
   3.691470276990011*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"orthoComplement", "[", "n_List", "]"}], ":=", 
  RowBox[{"Complement", "[", 
   RowBox[{
    RowBox[{"Orthogonalize", "[", 
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", "n"}], "]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"Orthogonalize", "[", 
     RowBox[{"{", "n", "}"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"orthoComplement", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676849228037901*^9, 3.6768493044940753`*^9}, {
  3.67684944544374*^9, 3.6768494522388444`*^9}, {3.6768495950835385`*^9, 
  3.676849601166132*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676849602061146*^9, 3.676893792154962*^9, 3.6769377623280525`*^9, 
   3.6769382323252716`*^9, 3.6769398317435226`*^9, 3.676939985993392*^9, 
   3.6769914103997116`*^9, 3.67699377686856*^9, 3.676993844259595*^9, 
   3.6771057103802805`*^9, {3.6771057905203924`*^9, 3.677105814190426*^9}, 
   3.6774496777895236`*^9, 3.677452930829587*^9, 3.683763033898438*^9, 
   3.6837650940582724`*^9, 3.683765728531562*^9, 3.683767108324482*^9, {
   3.6837671456496167`*^9, 3.6837671617135353`*^9}, 3.683767327918042*^9, 
   3.683767399483135*^9, 3.6837682410442696`*^9, 3.6837682895010414`*^9, 
   3.683768586581706*^9, 3.6887863288133307`*^9, 3.691470277536042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"text", "[", 
   RowBox[{"t_", ",", "\[Psi]_"}], "]"}], ":=", 
  RowBox[{"Text", "[", 
   RowBox[{"t", ",", "\[Psi]", ",", 
    RowBox[{"FormatType", "\[Rule]", "TraditionalForm"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graphicNormalOrthoComplement", "[", 
   RowBox[{
   "\[Psi]_List", ",", "u1_List", ",", "u2_List", ",", "c_RGBColor", ",", 
    "t_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", "=", 
      RowBox[{"orthoComplement", "[", "\[Psi]", "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"c", ",", "Dotted", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[Psi]"}], 
            "}"}], "]"}], ",", 
          RowBox[{"text", "[", 
           RowBox[{"t", ",", 
            RowBox[{"1.1", "\[Psi]"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"-", "#"}]}], "}"}], "&"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "u1"}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "u2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", 
           FractionBox["\[Pi]", "2"]}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "c"}]}], "]"}], ",", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"-", "#"}]}], "}"}], "&"}], "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "u1"}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "u2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", 
           FractionBox["\[Pi]", "2"], ",", "\[Pi]"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"c", ",", "Dotted"}], "}"}]}]}], "]"}]}], "}"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graphicNormalOrthoComplement", "[", 
   RowBox[{"\[Psi]_List", ",", "u1_List", ",", "u2_List", ",", "c_RGBColor"}],
    "]"}], ":=", 
  RowBox[{"graphicNormalOrthoComplement", "[", 
   RowBox[{"\[Psi]", ",", "u1", ",", "u2", ",", "c", ",", "\"\<\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"graphicNormalOrthoComplement", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "Blue", ",", 
   "\"\<\[LeftBracketingBar]0\[RightAngleBracket]\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.6768494579639325`*^9, 3.6768494687715983`*^9}, {
   3.6768495010070934`*^9, 3.6768497821589117`*^9}, {3.67684990183575*^9, 
   3.676849909550869*^9}, {3.6768499457939253`*^9, 3.6768500140999746`*^9}, 
   3.6768514361318316`*^9, {3.676852165033027*^9, 3.6768521780082264`*^9}, {
   3.676939607377577*^9, 3.676939626590372*^9}, {3.6769397821352606`*^9, 
   3.6769397837827864`*^9}, {3.677449789928938*^9, 3.6774498341464663`*^9}, {
   3.677449898319137*^9, 3.677449959364629*^9}, {3.6774500531629934`*^9, 
   3.6774501443012066`*^9}, {3.6774502670052247`*^9, 
   3.6774503964796305`*^9}, {3.6774528986517467`*^9, 
   3.6774528990327682`*^9}, {3.6837635532911453`*^9, 
   3.6837635730162735`*^9}, {3.683763711753209*^9, 3.6837637146573753`*^9}, {
   3.683763786098461*^9, 3.6837638689932027`*^9}, {3.6837639381721597`*^9, 
   3.6837639816346455`*^9}, {3.6837640897928314`*^9, 
   3.6837641016055074`*^9}, {3.6837641652351465`*^9, 3.683764209488678*^9}, {
   3.6837645217425375`*^9, 3.6837645430687575`*^9}, {3.6837646688229504`*^9, 
   3.683764706790122*^9}, {3.6837647557369213`*^9, 3.6837647891658335`*^9}, {
   3.6837649371943007`*^9, 3.683764954999319*^9}, {3.68376517724103*^9, 
   3.683765177963072*^9}, {3.6837658334795647`*^9, 3.6837658916418915`*^9}, {
   3.6837671344389753`*^9, 3.6837671528590293`*^9}, {3.6837673176594553`*^9, 
   3.6837673182394886`*^9}, {3.6837673883815002`*^9, 3.6837673885805116`*^9}, 
   3.6837676806512175`*^9, {3.683767830581793*^9, 3.6837678308968105`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Dashing[{0, Small}], 
    Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}], 
    Text3DBox["\<\"\[LeftBracketingBar]0\[RightAngleBracket]\"\>", {1.1, 0., 
     0.},
     FormatType->TraditionalForm]}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
4LpQsk5wNbXo/3Lwj1z8fzZ6+GA=
      "]], Line3DBox[CompressedData["
1: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
HUhwWSzZILiKSvR/OfhHLv4/6CZvbw==
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[2], Dashing[{0, Small}], 
     Line3DBox[CompressedData["
1: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
      "]], Line3DBox[CompressedData["
1:eJxN1ns4ldkeB3CDZE46uSRySWlGpympZMyZ8IsQRsouuaZBESmilMvszUQ0
5U46RuyQjbBt6WJ2RGlTQ0REctyK7L3tl1xy2THvPOc5a73red5/Ps96nne9
v99a6/1u8AygnZCUkJC4QD5SEni8fBnUPGTgYbKw9PcgHv/ftU/u2bQuFWBH
bnkd1R1mDRW7Uw5AbCNPhup/ahM2CmWO0HHerOULxR3PxZffSzkGXWUb1cUU
P+R/s7mE6wX6YX78OYrfy9QMWSz1gdP9a4w/Uzx/v3YeMyUAlIqY/uMUP+Jx
Pvrik7PwtQ7dWkhxts3OICY3GIiguqIRiqtvDjtGlF6AEF7o1DuKXzBcVxyX
woD5p3cr6ijuKksTdT6LhAfaT4qrKK7iYmHp+yQKotYY6nAobmTZpx3PvQS8
vQ6sbOp61h/Y+Ko0FrY1e7cFU3zP1sz3limJMJm6rEmG4hOen5p99yVB9VTS
/Mwi9i73XXz2syQo7I8pGab4VHaf2+4nyVDrXJpZT/H36nLTdtxUkP5xPieM
4m2psWY+pRmwTb/ZruULdnEfs98uOQc2xTSAuhh7X8aNt0ormbDF4NrOuQXs
d8tOLTDsmRA2NJ7SSfEe7Zeujm+ZcOJBVlYixcV15uclhbdg0SCpfX4e+1yg
5JzVqnxwG6e33puj1N/UvTLBoRDC6xtW1Mxgf1zYaOYWWA71Jkt/qBDYp12s
3PR9HkKlEW9lxVvsFdq36EqqtZAzmdEorsHerzyTkW1bD7HdZzcevoG9RK+i
UXdXI7DNNwgM/LH72UcalZ1sgnF3ziW2Pvb1Af9ofbGnFXhB4WYBkyLkTzfp
qBHftgF/Il2uho39U2UcXUbvNYivprAmj2J3kg9xpsl3wuI/YVXT19ijcsdq
3wy+AZWI739RKB9Dnrb2XG1yZzfYym9l37fErq6l+/Rwbg/0PWbLSfQKkcva
sLxXxfeCucz2lmBP7AsFhHyKdx+w+pvqfxgUIFdWVT+je60fdJf2/1jmhX1Z
adbH0aABoH33s8OXNj5yq6287naLQfhyO8p4jQX2o4SSwPLbIbiaWzAinT+K
3NbHg2e+MAS2FS28osWPuA42IRcHqt+D03rFYA137BK5Ufv0rn6Aqye3iV2L
RpCPiv2e0yyG4RXvNwfG/DByja9Un5+eGQZPh/ziaGvsz8X3u5zKR0DBbtmq
yEsfcJ2tXIY6HD9CTbhKjsmz9/i8R1zOzpYZhbLMFa9tJ4aQn9LtiN91ZxTi
fjX0zlPHnl67T2+/CR9mVty2TD4wiLyKZj7A6uSDzcXURovTA3jfRm0cl3AX
QL1lsnliej9y73OadM13AliT1Dv9Q0Qf8kc/rTweclQI+ydCI/WZvchjHMdm
xS+FMJKwoyL1XQ9yGTXZRC2zMYjf/ZnrIOhGrtW2w1ixYAymdW9nHVjdhVxz
C6ekT0IE1+zyzcr2dGJXnVX9t6sI7vED1U7Ba7xPhHfZrSwRyPmq5xm6tuHv
al0+aPtJBD7Ou3f7W7cil+zddYW7k4BOTgb9ZGgT8jcBJXKSPgS0u96MtM5p
RL7XzfuaSgYBmv81FdJO1SP/Xs+q9h2XAPo6o6+uhNYiF/BW6uztIiDH8KOm
iV4Vcn5H+lSYiIA6A/uQV9xy5JvFR/iPSF8KdFQ2ysJ+4puNXoukK8m6BxdE
YBeEd/UyCAIyS1zOhBljH6n6/XPEOAGyvro9JnQ28pmfyrjHPhEg/V3cPDe6
FJ8jwX1GwzT53uVjMR7JRch1JuQ65kiPa9f2+hcNe3SBfemWGQIGJ816RYrY
2avzh+NJJzq0SsLSCpHXb3CKsP1MQN+oa0t8Bgv54aNu+hWzBMTb/yydd/M2
cjpn159aC+T817PCxKJbyNekDfxiSfr59VA57oldIPV7mj/p017VOvYa2N1Y
20X3Sfd1eqqokMjE979Pu725mAC1EXBWG81GrvTB663pFwKqwic2E/RM5F4r
rjS7k348wd2TNfEf5NWx5d+Ekx4qb61x7Dj2GjfpJQ7pNutdtJqtbyC/o8zx
Ul0k66nSUJq3+jren4H3hA2k170otDQuTsZ9L3+m1UP6i/CBbpEG9oPLX90f
I/1hNGstMzEJ35+pb+QVlghwroBDUvwE5IVzmecOkm4vNCn9lfEb8p2csAZ3
0pUTTPUHjl9BbrxIo/uTHq8UaAw2ccitDwpVLpOekN49Obf6MnJp4M6T+QMs
QrIYfsVRuI+zTqe5pLdvflT9LDESOefS2N560t+r6B8x5dPxuTsxr/GadEbD
VtodRhi+DwOCtHpIr6idijtmcxHnrvL+mAHSbbfbWCsphyBnHs2hkzkMcsvY
yaHFZ5FfTyPkJ0iP/CPZ3Yl/Bue9DIPl03+vP1ZKqprhh/t16KzHLOkhAmOd
Dcre+D/7MFdrgXR/5Re90cUeyCsfPDclcyesdfWktzJckC/tG25YJJ3HnX18
vdgeearHLIfMr9Dh3X6kqtgU9/F/ORg8PdVekbm45i+8lzgR
      "]]}}}]], "Output",
 CellChangeTimes->{{3.683764201291209*^9, 3.6837642178821583`*^9}, {
   3.6837645266618195`*^9, 3.683764544077815*^9}, {3.683764689504133*^9, 
   3.6837647078461823`*^9}, 3.683764761077227*^9, 3.6837647912439528`*^9, 
   3.6837650941082754`*^9, 3.683765728579565*^9, 3.683767108385485*^9, {
   3.68376714570662*^9, 3.68376716179254*^9}, 3.6837673279620447`*^9, 
   3.683767399525138*^9, 3.6837682410892725`*^9, 3.683768289547044*^9, 
   3.6837685866297083`*^9, 3.6887863288573337`*^9, 3.6914702775960455`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graphicNormalOrthoComplement", "[", 
   RowBox[{"\[Psi]_List", ",", "c_RGBColor"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", "=", 
      RowBox[{"orthoComplement", "[", "\[Psi]", "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"c", ",", "Dotted", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[Psi]"}], 
            "}"}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{
           "u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{
           "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "c"}]}], "]"}]}], "}"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"graphicNormalOrthoComplement", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "Blue"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6768494579639325`*^9, 3.6768494687715983`*^9}, {
   3.6768495010070934`*^9, 3.6768497821589117`*^9}, {3.67684990183575*^9, 
   3.676849909550869*^9}, {3.6768499457939253`*^9, 3.6768500140999746`*^9}, 
   3.6768514361318316`*^9, {3.676852165033027*^9, 3.6768521780082264`*^9}, {
   3.676939607377577*^9, 3.676939626590372*^9}, {3.6769397821352606`*^9, 
   3.6769397837827864`*^9}, {3.677450037207081*^9, 3.6774500403112583`*^9}, {
   3.6774529122625246`*^9, 3.6774529136866064`*^9}, {3.683763586303034*^9, 
   3.6837635963836107`*^9}, {3.68376496131668*^9, 3.6837649687041025`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Dashing[{0, Small}], 
    Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
wE+pZ/y/Sf7/e3a5/+3Z/w8Btbmj
      "]]}}}]], "Output",
 CellChangeTimes->{
  3.6768497196304517`*^9, {3.6768497549384937`*^9, 3.6768497836864357`*^9}, 
   3.6768499107483873`*^9, 3.67684994997149*^9, {3.676849995499689*^9, 
   3.6768500158875017`*^9}, 3.67685143799186*^9, 3.6768521810732737`*^9, 
   3.6768937921824627`*^9, 3.6769377623555527`*^9, 3.6769382323527718`*^9, 
   3.6769398317710233`*^9, 3.6769399860233927`*^9, 3.676991410432212*^9, 
   3.6769937768985605`*^9, 3.676993844287095*^9, 3.67710571041028*^9, {
   3.677105790620393*^9, 3.6771058142204256`*^9}, 3.6774496778135247`*^9, 
   3.677450446557494*^9, {3.6774529165547705`*^9, 3.6774529309065914`*^9}, 
   3.6837630339584417`*^9, 3.6837650941612787`*^9, 3.683765728635568*^9, 
   3.6837671084134865`*^9, {3.683767145758623*^9, 3.683767161845543*^9}, 
   3.683767328017048*^9, 3.683767399582141*^9, 3.683768241120274*^9, 
   3.6837682895740457`*^9, 3.6837685866617107`*^9, 3.6887863288913355`*^9, 
   3.6914702776290474`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"styleMatrix", "[", 
   RowBox[{"\[Psi]_List", ",", "c_RGBColor"}], "]"}], ":=", 
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "\[Psi]", "]"}], ",", "c"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"styleMatrix", "[", 
   RowBox[{"\[Psi]_List", ",", "c_RGBColor", ",", "t_"}], "]"}], ":=", 
  RowBox[{"styleMatrix", "[", 
   RowBox[{"\[Psi]", ",", "c"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputCircles", "[", "\[Psi]s_List", "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Psi]sNormalized", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"Rest", "[", "#", "]"}], ",", 
           RowBox[{"Normalize", "[", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], "]"}], "&"}], "/@", "\[Psi]s"}]}], ",", 
      RowBox[{"prePrint", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"\[Phi]s", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Phi]", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Normalize", "[", 
              RowBox[{
               RowBox[{"\[Psi]s1", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], 
               "\[Cross]", 
               RowBox[{"\[Psi]s1", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}], 
             ",", 
             RowBox[{"Blend", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "&"}], "/@", "\[Psi]s1"}], "]"}]}], "}"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"prePrint", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"styleMatrix", "@@", 
                RowBox[{
                "\[Psi]s1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}], "\[Cross]", 
              RowBox[{"(", 
               RowBox[{"styleMatrix", "@@", 
                RowBox[{
                "\[Psi]s1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], "\[Equal]", 
             RowBox[{"styleMatrix", "[", "\[Phi]", "]"}]}]}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"\[Phi]s", ",", "\[Phi]"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]s1", ",", 
         RowBox[{"Subsets", "[", 
          RowBox[{"\[Psi]sNormalized", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"prePrint", ",", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "\[Phi]s", "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{
             RowBox[{"graphicNormalOrthoComplement", "[", 
              RowBox[{
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"\[Phi]s", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"Normalize", "[", 
                RowBox[{
                 RowBox[{
                 "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                 "\[Cross]", 
                 RowBox[{"\[Phi]s", "\[LeftDoubleBracket]", 
                  RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}],
                ",", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"Rest", "[", "#", "]"}]}]}], "]"}], "&"}], ",", 
            RowBox[{
             RowBox[{"graphicNormalOrthoComplement", "@@", "#"}], "&"}]}], 
           "]"}], "/@", "\[Psi]sNormalized"}], ",", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
               RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "\[Phi]", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "\[Phi]", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"-", 
                    RowBox[{
                    "\[Phi]", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Phi]", ",", "\[Phi]s"}], "}"}]}], "]"}]}], "}"}], 
           "]"}], "]"}]}], "]"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"showCircles", "[", "\[Psi]s_List", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"o", "=", 
      RowBox[{"outputCircles", "[", "\[Psi]s", "]"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"o", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
      "]"}], ";", 
     RowBox[{"Show", "[", 
      RowBox[{"o", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6768498034267387`*^9, 3.6768498799854145`*^9}, {
   3.6768510963971124`*^9, 3.676851109012306*^9}, {3.6768511400977836`*^9, 
   3.67685126552221*^9}, {3.6768512986872206`*^9, 3.676851397446237*^9}, {
   3.6768514718623805`*^9, 3.6768516098745003`*^9}, {3.676851640082464*^9, 
   3.6768516592452583`*^9}, {3.6768518294178724`*^9, 
   3.6768520829617667`*^9}, {3.6768521144472504`*^9, 3.676852132447527*^9}, {
   3.67685218670836*^9, 3.6768522108162303`*^9}, 3.676852252169366*^9, {
   3.67685228824992*^9, 3.6768523276355247`*^9}, {3.676854524934492*^9, 
   3.676854888875082*^9}, {3.676893764094531*^9, 3.676893784804849*^9}, {
   3.6768939247644987`*^9, 3.676893933689636*^9}, {3.6768942425143795`*^9, 
   3.6768943034278154`*^9}, {3.676894334533293*^9, 3.676894382064023*^9}, 
   3.6768944555676517`*^9, {3.676894487688145*^9, 3.6768945435615034`*^9}, {
   3.6768949539053063`*^9, 3.6768950215538454`*^9}, {3.6769364100297813`*^9, 
   3.676936548854414*^9}, {3.6769367323447323`*^9, 3.676936758950141*^9}, {
   3.6769368493315287`*^9, 3.6769369125600004`*^9}, {3.676936987673654*^9, 
   3.6769370617872925`*^9}, 3.6769370978328457`*^9, {3.6769371566587496`*^9, 
   3.6769371629688463`*^9}, {3.6769372135771236`*^9, 3.6769372143496356`*^9}, 
   3.6769372894807897`*^9, {3.6769374663010054`*^9, 3.676937596490505*^9}, {
   3.6769376654990654`*^9, 3.6769376926119814`*^9}, {3.6769377858184133`*^9, 
   3.6769377962860737`*^9}, {3.6769379528809795`*^9, 3.6769381446789255`*^9}, 
   3.676939632470462*^9, {3.6769396855987782`*^9, 3.6769397440971766`*^9}, {
   3.6769398740141726`*^9, 3.6769398959570093`*^9}, {3.6769935252171946`*^9, 
   3.676993646486557*^9}, {3.6769938290243607`*^9, 3.676993831624401*^9}, {
   3.6774518437864113`*^9, 3.6774518704439363`*^9}, {3.677451958543975*^9, 
   3.677451996151126*^9}, {3.6774520535374084`*^9, 3.6774522557359734`*^9}, {
   3.683763602754975*^9, 3.6837636062901773`*^9}, {3.6837649733783703`*^9, 
   3.6837650552260513`*^9}, {3.683765217821351*^9, 3.683765218407385*^9}, {
   3.6837652662291203`*^9, 3.6837652873903303`*^9}, {3.6837654618193073`*^9, 
   3.6837654857206745`*^9}, {3.683765561272996*^9, 3.6837655678383713`*^9}, {
   3.6837656486229916`*^9, 3.6837656813638644`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normalize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Cross]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6774524064405937`*^9, 3.6774524152360964`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6774524161241474`*^9, 3.677452930951594*^9, 3.6837630339764423`*^9, 
   3.6837650941962805`*^9, 3.6837657286975718`*^9, 3.6837671084534893`*^9, {
   3.6837671458036256`*^9, 3.6837671618695445`*^9}, 3.683767328041049*^9, 
   3.683767399606142*^9, 3.683768241168277*^9, 3.683768289621048*^9, 
   3.683768586704713*^9, 3.6887863289143367`*^9, 3.6914702776600494`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Epsilon]", "=", "0"}], ",", 
        RowBox[{"\[Psi]", "=", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}]}], ",", 
        RowBox[{"at", "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Psi]", ",", "t"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[Psi]"}], 
               "}"}], "]"}], ",", 
             RowBox[{"text", "[", 
              RowBox[{"t", ",", 
               RowBox[{"1.1", "\[Psi]"}]}], "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"atc", "=", 
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Psi]", ",", "t", ",", "c"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"c", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "\[Psi]"}], 
               "}"}], "]"}], ",", 
             RowBox[{"text", "[", 
              RowBox[{"t", ",", 
               RowBox[{"1.4", "\[Psi]"}]}], "]"}]}], "}"}]}], "]"}]}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"outputCircles", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "Red", ",", 
               "\"\<\[LeftBracketingBar]0\[RightAngleBracket]\>\""}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"1", "-", "\[Epsilon]"}], ",", "0"}], "}"}], ",", 
               "Green", ",", 
               "\"\<\[LeftBracketingBar]+\[RightAngleBracket]\>\""}], "}"}]}],
             "}"}], "]"}], "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}], "]"}], ",", 
        RowBox[{"Graphics3D", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"at", "[", 
            RowBox[{
            "\[Psi]", ",", 
             "\"\<\[LeftBracketingBar]\!\(\*SubsuperscriptBox[\(0\), \(\
\[Theta], \[Gamma]\), \(\[UpTee]\)]\)\[RightAngleBracket]\>\""}], "]"}], ",", 
           RowBox[{"atc", "[", 
            RowBox[{
             RowBox[{"Normalize", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Cross]", 
               "\[Psi]"}], "]"}], ",", 
             "\"\<\[LeftBracketingBar]0\[RightAngleBracket]\[Cross]\
\[LeftBracketingBar]\!\(\*SubsuperscriptBox[\(0\), \(\[Theta], \[Gamma]\), \(\
\[UpTee]\)]\)\[RightAngleBracket]\>\"", ",", "Red"}], "]"}], ",", 
           RowBox[{"atc", "[", 
            RowBox[{
             RowBox[{"Normalize", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"1", "-", "\[Epsilon]"}], ",", "0"}], "}"}], 
               "\[Cross]", "\[Psi]"}], "]"}], ",", 
             "\"\<\[LeftBracketingBar]+\[RightAngleBracket]\[Cross]\
\[LeftBracketingBar]\!\(\*SubsuperscriptBox[\(0\), \(\[Theta], \[Gamma]\), \(\
\[UpTee]\)]\)\[RightAngleBracket]\>\"", ",", "Green"}], "]"}]}], "]"}], 
         "]"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67693815409157*^9, 3.6769381854120507`*^9}, {
   3.67699151706635*^9, 3.676991615140356*^9}, {3.676991738897257*^9, 
   3.676991744237339*^9}, {3.6769918925696173`*^9, 3.676991895777167*^9}, {
   3.6769919266626415`*^9, 3.6769921009153175`*^9}, {3.6769921628137684`*^9, 
   3.6769921762614746`*^9}, 3.6769922073394523`*^9, {3.676992275295496*^9, 
   3.6769922931732707`*^9}, {3.6769934975642695`*^9, 3.676993503194356*^9}, {
   3.6769936586892443`*^9, 3.6769936829196167`*^9}, {3.6769939603063774`*^9, 
   3.6769939841592436`*^9}, {3.6769940220848265`*^9, 
   3.6769940241723585`*^9}, {3.677105739330321*^9, 3.677105754500342*^9}, {
   3.6837632240333133`*^9, 3.683763247559659*^9}, {3.683765718490988*^9, 
   3.683765750294807*^9}, {3.6837658015417385`*^9, 3.683765815242522*^9}, {
   3.6837659113290176`*^9, 3.6837659426068068`*^9}, {3.6837663762876115`*^9, 
   3.683766377203664*^9}, {3.683766425142406*^9, 3.683766467368821*^9}, 
   3.6837665252831335`*^9, 3.6837666059037447`*^9, {3.683766684998269*^9, 
   3.68376684918666*^9}, {3.6837668818535285`*^9, 3.683767044682842*^9}, {
   3.6837670812219315`*^9, 3.683767097814881*^9}, {3.6837676864375477`*^9, 
   3.6837676870335817`*^9}, {3.6837678552282023`*^9, 
   3.6837678640387063`*^9}, {3.6837681366102962`*^9, 3.6837682286935635`*^9}, 
   3.68376826202847*^9, {3.683768305406951*^9, 3.6837683057669716`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Rational[1, 2] Pi}}, 
    Typeset`size$$ = {360., {195., 199.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]$2777$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2777$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        With[{$CellContext`\[Epsilon] = 0, $CellContext`\[Psi] = {0, 
            Sin[$CellContext`\[Theta]$$], 
            Cos[$CellContext`\[Theta]$$]}, $CellContext`at = 
          Function[{$CellContext`\[Psi], $CellContext`t}, {
             Arrow[{{0, 0, 0}, $CellContext`\[Psi]}], 
             $CellContext`text[$CellContext`t, 
              1.1 $CellContext`\[Psi]]}], $CellContext`atc = 
          Function[{$CellContext`\[Psi], $CellContext`t, $CellContext`c}, \
{$CellContext`c, 
             Arrow[{{0, 0, 0}, $CellContext`\[Psi]}], 
             $CellContext`text[$CellContext`t, 1.4 $CellContext`\[Psi]]}]}, {
          Show[
           Part[
            $CellContext`outputCircles[{{{1, 0, 0}, Red, 
               "\[LeftBracketingBar]0\[RightAngleBracket]"}, {{
               1, 1 - $CellContext`\[Epsilon], 0}, Green, 
               "\[LeftBracketingBar]+\[RightAngleBracket]"}}], 2]], 
          Graphics3D[
           Join[
            $CellContext`at[$CellContext`\[Psi], 
             
             "\[LeftBracketingBar]\!\(\*SubsuperscriptBox[\(0\), \(\[Theta], \
\[Gamma]\), \(\[UpTee]\)]\)\[RightAngleBracket]"], 
            $CellContext`atc[
             Normalize[
              Cross[{1, 0, 0}, $CellContext`\[Psi]]], 
             "\[LeftBracketingBar]0\[RightAngleBracket]\[Cross]\
\[LeftBracketingBar]\!\(\*SubsuperscriptBox[\(0\), \(\[Theta], \[Gamma]\), \(\
\[UpTee]\)]\)\[RightAngleBracket]", Red], 
            $CellContext`atc[
             Normalize[
              
              Cross[{1, 1 - $CellContext`\[Epsilon], 
                0}, $CellContext`\[Psi]]], 
             "\[LeftBracketingBar]+\[RightAngleBracket]\[Cross]\
\[LeftBracketingBar]\!\(\*SubsuperscriptBox[\(0\), \(\[Theta], \[Gamma]\), \(\
\[UpTee]\)]\)\[RightAngleBracket]", Green]]]}]], 
      "Specifications" :> {{$CellContext`\[Theta]$$, 0, Rational[1, 2] Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{407., {238., 245.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6769381648492355`*^9, 3.6769381863995657`*^9}, 
   3.6769382324052725`*^9, 3.676939832291031*^9, 3.676939986110894*^9, 
   3.6769914104897127`*^9, 3.676992294813296*^9, 3.676993776968561*^9, 
   3.676993844354596*^9, 3.676993985559265*^9, 3.6769940258073835`*^9, 
   3.6771057104302807`*^9, 3.6771057560203443`*^9, {3.6771057906803927`*^9, 
   3.6771058142604256`*^9}, 3.677449677843527*^9, 3.6774522072372*^9, 
   3.677452263914441*^9, 3.6774529311066027`*^9, 3.6837630339974437`*^9, 
   3.6837650942172813`*^9, 3.683765728721573*^9, 3.683767108607498*^9, {
   3.683767145828627*^9, 3.683767161897546*^9}, 3.6837673280700507`*^9, 
   3.6837673996291437`*^9, 3.683768241328286*^9, 3.6837682897810574`*^9, 
   3.6837685868657217`*^9, 3.6887863289383383`*^9, 3.691470277699052*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showCircles", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "Red"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", "Green"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", "Blue"}], "}"}]}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.68376650562801*^9, 3.683766506241045*^9}, {
  3.6837665881377287`*^9, 3.6837665888597703`*^9}, {3.6914712623553705`*^9, 
  3.6914712989744654`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"1"},
           {"0"},
           {"0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["1", 
             SqrtBox["2"]]},
           {
            FractionBox["1", 
             SqrtBox["2"]]},
           {"0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]]}], "\[Equal]", 
    RowBox[{"styleMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[1, 2], 
              Rational[1, 2], 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.3333333333333333, 0.3333333333333333, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1/2, 1/2, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[1, 2], 
               Rational[1, 2], 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
         Rational[1, 2], 
         Rational[1, 2], 0],
        Editable->False,
        Selectable->False]}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {"1"},
           {"0"},
           {"0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["1", 
             SqrtBox["2"]]},
           {"0"},
           {
            FractionBox["1", 
             SqrtBox["2"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}], "\[Equal]", 
    RowBox[{"styleMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[1, 2], 0, 
              Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.3333333333333333, 0., 0.3333333333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1/2, 0, 1/2]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[1, 2], 0, 
               Rational[1, 2]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
         Rational[1, 2], 0, 
         Rational[1, 2]],
        Editable->False,
        Selectable->False]}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["1", 
             SqrtBox["2"]]},
           {
            FractionBox["1", 
             SqrtBox["2"]]},
           {"0"}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["1", 
             SqrtBox["2"]]},
           {"0"},
           {
            FractionBox["1", 
             SqrtBox["2"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}], "\[Equal]", 
    RowBox[{"styleMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["3"]], ",", 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["3"]]}], ",", 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["3"]]}]}], "}"}], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[1, 2], 
              Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.3333333333333333, 0.3333333333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[0, 1/2, 1/2]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[1, 2], 
               Rational[1, 2]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 
         Rational[1, 2], 
         Rational[1, 2]],
        Editable->False,
        Selectable->False]}], "}"}], "]"}]}]}], "}"}]], "Print",
 CellChangeTimes->{3.69147130010453*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], Dashing[{0, Small}], 
     Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, {{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
wE+pZ/y/Sf7/e3a5/+3Z/w8Btbmj
       "]]}}}, {
    {RGBColor[0, 1, 0], Dashing[{0, Small}], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {2^Rational[-1, 2], 2^Rational[-1, 2], 0}}, {{0, 0, 
        0}, {0.7071067811865475, 0.7071067811865475, 0}}]]}, {{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
       "]]}}}, {
    {RGBColor[0, 0, 1], Dashing[{0, Small}], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {2^Rational[-1, 2], 0, 2^Rational[-1, 2]}}, {{0, 0, 
        0}, {0.7071067811865475, 0, 0.7071067811865475}}]]}, {{}, {}, 
     {RGBColor[0, 0, 1], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
Uq3JiIMNC0DUf1UeMw5Yh9yZYkDuQ7WDlrjWC2b8Z/yTUQbAgaWncEyraQEz
rgly6BKT5uBG7pCQ/aUiZmyt7xZtTWsDazUV4zHN5cz4xXrxTKGCVrDLSJY8
s/MtMx66/k4126IFkoZ8LsU7NjLjjpAE5cYnTXBd36rcpO9/Rt1DEsU7Ihtg
eFx4c2ojx4x2Z95U2014D2NyzQ48iOpgxray7SUdhjXQoRrRYVDVxYwtFbMb
+vaWg7DFGf/Gyz3MeFpq0dqQgwXg5Ku6eUmHgBn320DobrUCcI5/e169R8CM
F++N0ZeeVAAV3OyZ+r0CZrTpkyg6/zwfqrelRG0ZEDBjiEiY2UixfAgST301
OJpnxh/nNquIJ+ZBMvfVuUWWZ8aE5d+0jn/LBtVzS21/mPLMqOggauhblA3V
dU+Lpu3lmfHIPwPjHodmg2dtxbllFjwzOmdp+NVoZ0PZsLQavYM8M2a7XtDo
C8wCS8nr22UdeGbc985BtM02E6JdIt9YXuaZsbjNff3Rj09haL/iv9MSeGZ8
9XJE21HXp9B1oSv7YhLPjOs/Row9NOcpdNgNt29J4ZlRz2ni/vUmqRA9uLPa
7RnPjG89FwbHvE4G3StLLhnm8cxon9txRzUpAXRnN45fUMUz47UrP2sqDBJA
RqXuXF81z4zHlMTO7++JB7542N/ptTwzzt9mc/GkbDzs9AjxlX3PM6PwtRpf
VHoChfKluV5NPDP2Za32u98fDcbGlVFO3TwzhucJ3oJiNHj/Oy80sYdnRvn4
zKyyf+/Db689dXUCnhmNF1btr39zDxrjls+X6OWZ0cp1VWx0ejgofpjfKNLH
M2O9i0z4+C9hULnWt7+bdGr85+FNGWv5MPg5xUa/sJ9nRrsLBhpLV4XCwwfb
C/Z955nxhZr6p1M/bkJums3LWYM8MyaUiUf0HwqEkwpu3SmkU+PwkFLlw+/9
4eghTQPNnzwzNsyTK1v//AYEtYi+XfeLZ8YYzqA8RsEHPr999SuedGqEvSKL
J632hk5xP3Op3zwz5n+1jj426AFaNuVdBaRTo/qNu05T69xgndjEieJ/vs/+
Z1T5sO1J4nMXmNXH2xuQTo3PgjcZBKy+AAuKzSTdSafGbPnjGc8GT4G9qs6P
eNKpMTDJ8urb58fgR3PkjCrSqbEsrnpzy6AV3DA54EjmVma8l6NaJPlzJ3xW
cZ81SDr1/74n/7/vy5n/Bz8CjDk=
       "]]}}}, 
   {Opacity[0.4], SphereBox[{0, 0, 0}], 
    {RGBColor[
      NCache[
       Rational[1, 2], 0.5], 
      NCache[
       Rational[1, 2], 0.5], 0], Line3DBox[{{0, 0, 1}, {0, 0, -1}}]}, 
    {RGBColor[
      NCache[
       Rational[1, 2], 0.5], 0, 
      NCache[
       Rational[1, 2], 0.5]], Line3DBox[{{0, -1, 0}, {0, 1, 0}}]}, 
    {RGBColor[0, 
      NCache[
       Rational[1, 2], 0.5], 
      NCache[
       Rational[1, 2], 0.5]], 
     Line3DBox[
      NCache[{{3^
         Rational[-1, 2], -3^Rational[-1, 2], -3^Rational[-1, 2]}, {-3^
          Rational[-1, 2], 3^Rational[-1, 2], 3^Rational[-1, 2]}}, {{
       0.5773502691896258, -0.5773502691896258, -0.5773502691896258}, \
{-0.5773502691896258, 0.5773502691896258, 0.5773502691896258}}]]}}},
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.691471300124531*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"showCircles", "[", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", "=", 
      FractionBox["1", "4"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"1", "-", "\[Epsilon]"}]}], "}"}], ",", "Red"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "-", "\[Epsilon]"}], ",", "1"}], "}"}], ",", "Green"}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "-", "\[Epsilon]"}], ",", "1", ",", "1"}], "}"}], ",", 
        "Blue"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.68376650562801*^9, 3.683766506241045*^9}, {
  3.6837665881377287`*^9, 3.6837665888597703`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]]}], "\[Equal]", 
    RowBox[{"styleMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["7", "9"], ",", 
         RowBox[{"-", 
          FractionBox["4", "9"]}], ",", 
         RowBox[{"-", 
          FractionBox["4", "9"]}]}], "}"}], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[1, 2], 
              Rational[1, 2], 0], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.3333333333333333, 0.3333333333333333, 0.],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1/2, 1/2, 0]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[1, 2], 
               Rational[1, 2], 0]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
         Rational[1, 2], 
         Rational[1, 2], 0],
        Editable->False,
        Selectable->False]}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}], "\[Equal]", 
    RowBox[{"styleMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["4", "9"], ",", 
         RowBox[{"-", 
          FractionBox["7", "9"]}], ",", 
         FractionBox["4", "9"]}], "}"}], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[1, 2], 0, 
              Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0.3333333333333333, 0., 0.3333333333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[1/2, 0, 1/2]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[1, 2], 0, 
               Rational[1, 2]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[
         Rational[1, 2], 0, 
         Rational[1, 2]],
        Editable->False,
        Selectable->False]}], "}"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}], "\[Equal]", 
    RowBox[{"styleMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["4", "9"]}], ",", 
         RowBox[{"-", 
          FractionBox["4", "9"]}], ",", 
         FractionBox["7", "9"]}], "}"}], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[1, 2], 
              Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.3333333333333333, 0.3333333333333333],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[0, 1/2, 1/2]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[1, 2], 
               Rational[1, 2]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0, 
         Rational[1, 2], 
         Rational[1, 2]],
        Editable->False,
        Selectable->False]}], "}"}], "]"}]}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.6769377623855534`*^9, 3.6769378022336655`*^9, 3.6769380724503155`*^9, {
   3.6769381054658227`*^9, 3.6769381171935034`*^9}, 3.676938197464736*^9, 
   3.676938232422773*^9, 3.6769398328035393`*^9, 3.6769399861483946`*^9, 
   3.676991410527213*^9, 3.676993777201065*^9, 3.6769938445921*^9, 
   3.6771057105802803`*^9, {3.677105790750393*^9, 3.677105814410426*^9}, 
   3.677449677995535*^9, 3.6774529312446103`*^9, 3.6837650944152927`*^9, 
   3.683765728934585*^9, 3.6837671087535067`*^9, {3.6837671460496397`*^9, 
   3.6837671621125584`*^9}, 3.6837673282860627`*^9, 3.6837673998401556`*^9, 
   3.6837682414942956`*^9, 3.683768289934066*^9, 3.6837685870317316`*^9, 
   3.6887863292083535`*^9, 3.691470277977068*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], Dashing[{0, Small}], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        4 41^Rational[-1, 2], 4 41^Rational[-1, 2], 3 41^Rational[-1, 2]}}, {{
        0, 0, 0}, {0.6246950475544243, 0.6246950475544243, 
        0.4685212856658182}}]]}, {{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
fJ10+L//06r9bQj47/+0/wNAy9cf
       "]]}}}, {
    {RGBColor[0, 1, 0], Dashing[{0, Small}], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        4 41^Rational[-1, 2], 3 41^Rational[-1, 2], 4 41^Rational[-1, 2]}}, {{
        0, 0, 0}, {0.6246950475544243, 0.4685212856658182, 
        0.6246950475544243}}]]}, {{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
       "]]}}}, {
    {RGBColor[0, 0, 1], Dashing[{0, Small}], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        3 41^Rational[-1, 2], 4 41^Rational[-1, 2], 4 41^Rational[-1, 2]}}, {{
        0, 0, 0}, {0.4685212856658182, 0.6246950475544243, 
        0.6246950475544243}}]]}, {{}, {}, 
     {RGBColor[0, 0, 1], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
TBzbtMm0k3StYFwtQ3BRS+xPptMUA3sCSuL+642ZWuvTp01wMfbV/JWL+xjY
Vs5i/7fefRNVb1SCh3PnlTEoDQy82vZcjkZ6yu3S50eleaj4Urs8uoCB7fWK
5rWkf9edu65NkYdnt50TmCcy8N8WcMgn3cgugGWmzsNQg9o9gisM3OCs6JTw
X3+enhv/RJfcz7M3S972ZqDszRzrc6SXHT13SMyYh1PNC+X0dpLngUBipT3p
OsFXLA8CD6N09hscWMLA1KSVxYPkdc6M3qYhuZuH1yNs7c8X0fFaZsLsXrLv
+SmYbzc5z8Olz00tvifR8U9W2tn7pDfPz3a7cJWH/+Z+yzkcRkd9+b4GM9Kl
z273eXuTh+d+XVxnZk/H/vKTO4LJeVDaohSsnsJD/29aZ14JaJigqx31huyB
jQYhys3lPPR54bYiTJGGyfI44+cwAT/flyYcmtOFmua/V70ke0u+c/gZS9LD
QeLKIdkuPF1kqljdR/YZk4iGGz8IKI9bsMl9aRf23GouH86nomHh2L4Z30nn
ZOyy1evCR5o3RxbaUdE8ifq5iNynVauW7xh06MKDDRsCTwZTsOjEGYOfvQSc
fczk+zzswi0Z+zYlU1vxRQD9l6CF7JPxo2V6y7txXec8iaHiVqw/EHDEqZmc
Q+3Vam463UhfN+2jeXIrHv+0pLSEPJd+2447h6/rRow7ovjFqxWXNnqsPlNP
QKFcu0b11m68vIBy++VQC0omyOlGkOeeuV+f/CyfbjxucetGyKwWbLNz+nuw
iLw+C6/OvZvfjZ/vrdW7fbIRs5buHqi9S4BzC9M/ZUMPytYFtwXMq8FPReJK
KYYEzOHGHJXf1IsLLm2UmUmvxsaACeLqWvL7l+Koh20vEkplqvdSq7HXvSXX
YzUBNiXZwS8cyPUzl/cnrqnG+wX6ayVXEvA0LMRZ2aMX9/5TeXbGsQq7h34p
LFlKnmPf7unQLvai2LP9X03iK/BjmshAQYwAN/ENpTuLejE5aaXuer1SdPnw
525yjQA6hLQd7sv70KvRX/qfdTYaLM+k/NwogNSGXs4TYR9GNLx3Xfc3Exw+
52gcHCGfv37fYszXC3CjzBa9j6IssLG28Zk51Afy54/pK1sI0PFVsbo5Oxvm
bS8PTxf0AYvvaztuJcB9hu9Oq33MgUevLpiy2vtAau1reup2AYrUF93ZvCEf
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
       "]]}}}, 
   {Opacity[0.4], SphereBox[{0, 0, 0}], 
    {RGBColor[
      NCache[
       Rational[1, 2], 0.5], 
      NCache[
       Rational[1, 2], 0.5], 0], 
     Line3DBox[
      NCache[{{Rational[7, 9], Rational[-4, 9], Rational[-4, 9]}, {
        Rational[-7, 9], Rational[4, 9], Rational[4, 9]}}, {{
       0.7777777777777778, -0.4444444444444444, -0.4444444444444444}, \
{-0.7777777777777778, 0.4444444444444444, 0.4444444444444444}}]]}, 
    {RGBColor[
      NCache[
       Rational[1, 2], 0.5], 0, 
      NCache[
       Rational[1, 2], 0.5]], 
     Line3DBox[
      NCache[{{Rational[4, 9], Rational[-7, 9], Rational[4, 9]}, {
        Rational[-4, 9], Rational[7, 9], Rational[-4, 9]}}, {{
       0.4444444444444444, -0.7777777777777778, 
       0.4444444444444444}, {-0.4444444444444444, 
       0.7777777777777778, -0.4444444444444444}}]]}, 
    {RGBColor[0, 
      NCache[
       Rational[1, 2], 0.5], 
      NCache[
       Rational[1, 2], 0.5]], 
     Line3DBox[
      NCache[{{Rational[-4, 9], Rational[-4, 9], Rational[7, 9]}, {
        Rational[4, 9], Rational[4, 9], 
         Rational[-7, 9]}}, {{-0.4444444444444444, -0.4444444444444444, 
       0.7777777777777778}, {0.4444444444444444, 
       0.4444444444444444, -0.7777777777777778}}]]}}},
  ViewPoint->{1.3, -2.4, 2.},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.6769377624630547`*^9, 3.6769378022936664`*^9, 3.676938072515317*^9, {
   3.676938105535824*^9, 3.676938117258504*^9}, 3.676938197529737*^9, 
   3.6769382324777737`*^9, 3.6769398328710403`*^9, 3.6769399862158957`*^9, 
   3.676991410579714*^9, 3.6769937772160654`*^9, 3.6769938446071005`*^9, 
   3.6771057105902805`*^9, {3.6771057907803926`*^9, 3.6771058144304256`*^9}, 
   3.677449678009536*^9, 3.6774529312576113`*^9, 3.6837650944332943`*^9, 
   3.683765728952586*^9, 3.683767108768507*^9, {3.6837671460676403`*^9, 
   3.6837671621305594`*^9}, 3.683767328304064*^9, 3.6837673998571568`*^9, 
   3.6837682415122967`*^9, 3.6837682899530673`*^9, 3.6837685870487328`*^9, 
   3.6887863292253547`*^9, 3.6914702780100694`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["B Proofs", "Section",
 CellChangeTimes->{3.6887863223409605`*^9}],

Cell[CellGroupData[{

Cell["\<\
This part tries to see what is the correct form of 2 dimensional complex \
vector space...\
\>", "Subsection",
 CellChangeTimes->{{3.688786391370909*^9, 3.6887864564896336`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["a", "0"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"\[Rho]", "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"j", "=", "0"}], "3"], 
      RowBox[{
       SubscriptBox["a", "j"], 
       RowBox[{"PauliMatrix", "[", "j", "]"}]}]}]}]}], ")"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.6886837960288477`*^9, 3.6886838704691057`*^9}, {
  3.6886839255242543`*^9, 3.68868392894445*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SubscriptBox["a", "3"]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", "1"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["a", "2"]}]}], ")"}]}]},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["a", "1"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["a", "2"]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SubscriptBox["a", "3"]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.688683851740034*^9, 3.688683870963134*^9}, 
   3.688683933789727*^9, 3.68878632932436*^9, 3.691470278035071*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigensystem", "[", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SubscriptBox["a", "3"]}], ")"}]}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", "1"], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["a", "2"]}]}], ")"}]}]},
      {
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["a", "1"], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["a", "2"]}]}], ")"}]}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SubscriptBox["a", "3"]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]], "]"}]], "Input",
 CellChangeTimes->{{3.688685381443528*^9, 3.6886854014506726`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SqrtBox[
         RowBox[{
          SubsuperscriptBox["a", "1", "2"], "+", 
          SubsuperscriptBox["a", "2", "2"], "+", 
          SubsuperscriptBox["a", "3", "2"]}]]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{
          SubsuperscriptBox["a", "1", "2"], "+", 
          SubsuperscriptBox["a", "2", "2"], "+", 
          SubsuperscriptBox["a", "3", "2"]}]]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", "3"]}], "+", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["a", "1", "2"], "+", 
            SubsuperscriptBox["a", "2", "2"], "+", 
            SubsuperscriptBox["a", "3", "2"]}]]}], 
         RowBox[{
          SubscriptBox["a", "1"], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["a", "2"]}]}]]}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SubscriptBox["a", "3"]}], "-", 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["a", "1", "2"], "+", 
            SubsuperscriptBox["a", "2", "2"], "+", 
            SubsuperscriptBox["a", "3", "2"]}]]}], 
         RowBox[{
          SubscriptBox["a", "1"], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SubscriptBox["a", "2"]}]}]]}], ",", "1"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.688685402012705*^9, 3.688786329360362*^9, 
  3.691470278079073*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", "3"], "-", 
        SqrtBox[
         RowBox[{
          SubsuperscriptBox["a", "1", "2"], "+", 
          SubsuperscriptBox["a", "2", "2"], "+", 
          SubsuperscriptBox["a", "3", "2"]}]]}], ",", 
       RowBox[{
        SubscriptBox["a", "1"], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SubscriptBox["a", "2"]}]}]}], "}"}], "\[Conjugate]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["a", "3"], "+", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["a", "1", "2"], "+", 
         SubsuperscriptBox["a", "2", "2"], "+", 
         SubsuperscriptBox["a", "3", "2"]}]]}], ",", 
      RowBox[{
       SubscriptBox["a", "1"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["a", "2"]}]}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["a", "1"], "2"], "+", 
     SuperscriptBox[
      SubscriptBox["a", "2"], "2"], "+", 
     SuperscriptBox[
      SubscriptBox["a", "3"], "2"]}], "\[LessEqual]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886870976976924`*^9, 3.688687124179207*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.688687107859274*^9, 3.68868712474924*^9}, 
   3.688786329400365*^9, 3.6914702781320763`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Normalize", "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["a", "3"], "-", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["a", "1", "2"], "+", 
           SubsuperscriptBox["a", "2", "2"], "+", 
           SubsuperscriptBox["a", "3", "2"]}]]}], ",", 
        RowBox[{
         SubscriptBox["a", "1"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["a", "2"]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["a", "3"], "+", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["a", "1", "2"], "+", 
           SubsuperscriptBox["a", "2", "2"], "+", 
           SubsuperscriptBox["a", "3", "2"]}]]}], ",", 
        RowBox[{
         SubscriptBox["a", "1"], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SubscriptBox["a", "2"]}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["a", "1"], "2"], "+", 
     SuperscriptBox[
      SubscriptBox["a", "2"], "2"], "+", 
     SuperscriptBox[
      SubscriptBox["a", "3"], "2"]}], "\[LessEqual]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886868150615263`*^9, 3.688686837831829*^9}, {
  3.6886868763050294`*^9, 3.688687015622998*^9}, {3.6886871921800966`*^9, 
  3.6886872245599484`*^9}, {3.6886874164789257`*^9, 3.688687479621537*^9}, {
  3.6886875795992556`*^9, 3.6886875988913593`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["a", "3"], "-", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["a", "1", "2"], "+", 
         SubsuperscriptBox["a", "2", "2"], "+", 
         SubsuperscriptBox["a", "3", "2"]}]]}], 
      SqrtBox[
       RowBox[{
        SubsuperscriptBox["a", "1", "2"], "+", 
        SubsuperscriptBox["a", "2", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "3"], "-", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]], ",", 
     FractionBox[
      RowBox[{
       SubscriptBox["a", "1"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["a", "2"]}]}], 
      SqrtBox[
       RowBox[{
        SubsuperscriptBox["a", "1", "2"], "+", 
        SubsuperscriptBox["a", "2", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "3"], "-", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SubscriptBox["a", "3"], "+", 
       SqrtBox[
        RowBox[{
         SubsuperscriptBox["a", "1", "2"], "+", 
         SubsuperscriptBox["a", "2", "2"], "+", 
         SubsuperscriptBox["a", "3", "2"]}]]}], 
      SqrtBox[
       RowBox[{
        SubsuperscriptBox["a", "1", "2"], "+", 
        SubsuperscriptBox["a", "2", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "3"], "+", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]], ",", 
     FractionBox[
      RowBox[{
       SubscriptBox["a", "1"], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox["a", "2"]}]}], 
      SqrtBox[
       RowBox[{
        SubsuperscriptBox["a", "1", "2"], "+", 
        SubsuperscriptBox["a", "2", "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["a", "3"], "+", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886868959591537`*^9, {3.6886869392866316`*^9, 3.6886869669792156`*^9}, 
   3.6886870328189816`*^9, {3.6886872151814117`*^9, 3.688687226598065*^9}, 
   3.6886874861489105`*^9, {3.688687589559825*^9, 3.6886875997634087`*^9}, 
   3.6887863305204287`*^9, 3.691470279520156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          FractionBox[
           RowBox[{
            SubscriptBox["a", "3"], "-", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["a", "1", "2"], "+", 
              SubsuperscriptBox["a", "2", "2"], "+", 
              SubsuperscriptBox["a", "3", "2"]}]]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["a", "3"], "-", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["a", "1", "2"], "+", 
                  SubsuperscriptBox["a", "2", "2"], "+", 
                  SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]], 
          FractionBox[
           RowBox[{
            SubscriptBox["a", "3"], "+", 
            SqrtBox[
             RowBox[{
              SubsuperscriptBox["a", "1", "2"], "+", 
              SubsuperscriptBox["a", "2", "2"], "+", 
              SubsuperscriptBox["a", "3", "2"]}]]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["a", "3"], "+", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["a", "1", "2"], "+", 
                  SubsuperscriptBox["a", "2", "2"], "+", 
                  SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]]},
         {
          FractionBox[
           RowBox[{
            SubscriptBox["a", "1"], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["a", "2"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["a", "3"], "-", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["a", "1", "2"], "+", 
                  SubsuperscriptBox["a", "2", "2"], "+", 
                  SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]], 
          FractionBox[
           RowBox[{
            SubscriptBox["a", "1"], "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SubscriptBox["a", "2"]}]}], 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["a", "3"], "+", 
                SqrtBox[
                 RowBox[{
                  SubsuperscriptBox["a", "1", "2"], "+", 
                  SubsuperscriptBox["a", "2", "2"], "+", 
                  SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]]}
        }], "\[NoBreak]", ")"}], "\[ConjugateTranspose]"}], ".", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SubscriptBox["a", "3"]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["a", "1"], "-", 
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["a", "2"]}]}], ")"}]}]},
         {
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SubscriptBox["a", "1"], "+", 
             RowBox[{"\[ImaginaryI]", " ", 
              SubscriptBox["a", "2"]}]}], ")"}]}], 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             SubscriptBox["a", "3"]}], ")"}]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]], ".", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox[
          RowBox[{
           SubscriptBox["a", "3"], "-", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SubsuperscriptBox["a", "3", "2"]}]]}], 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["a", "1", "2"], "+", 
            SubsuperscriptBox["a", "2", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", "3"], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["a", "1", "2"], "+", 
                 SubsuperscriptBox["a", "2", "2"], "+", 
                 SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]], 
         FractionBox[
          RowBox[{
           SubscriptBox["a", "3"], "+", 
           SqrtBox[
            RowBox[{
             SubsuperscriptBox["a", "1", "2"], "+", 
             SubsuperscriptBox["a", "2", "2"], "+", 
             SubsuperscriptBox["a", "3", "2"]}]]}], 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["a", "1", "2"], "+", 
            SubsuperscriptBox["a", "2", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", "3"], "+", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["a", "1", "2"], "+", 
                 SubsuperscriptBox["a", "2", "2"], "+", 
                 SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]]},
        {
         FractionBox[
          RowBox[{
           SubscriptBox["a", "1"], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["a", "2"]}]}], 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["a", "1", "2"], "+", 
            SubsuperscriptBox["a", "2", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", "3"], "-", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["a", "1", "2"], "+", 
                 SubsuperscriptBox["a", "2", "2"], "+", 
                 SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]], 
         FractionBox[
          RowBox[{
           SubscriptBox["a", "1"], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SubscriptBox["a", "2"]}]}], 
          SqrtBox[
           RowBox[{
            SubsuperscriptBox["a", "1", "2"], "+", 
            SubsuperscriptBox["a", "2", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SubscriptBox["a", "3"], "+", 
               SqrtBox[
                RowBox[{
                 SubsuperscriptBox["a", "1", "2"], "+", 
                 SubsuperscriptBox["a", "2", "2"], "+", 
                 SubsuperscriptBox["a", "3", "2"]}]]}], ")"}], "2"]}]]]}
       }], "\[NoBreak]", ")"}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       SubscriptBox["a", "1"], "2"], "+", 
      SuperscriptBox[
       SubscriptBox["a", "2"], "2"], "+", 
      SuperscriptBox[
       SubscriptBox["a", "3"], "2"]}], "\[LessEqual]", "1"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{
  3.6886875701737165`*^9, {3.688687614244237*^9, 3.688687717495143*^9}, {
   3.6886878205720387`*^9, 3.6886878368549695`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["a", "1", "2"], "+", 
           SubsuperscriptBox["a", "2", "2"], "+", 
           SubsuperscriptBox["a", "3", "2"]}]]}], ")"}]}], "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{
           SubsuperscriptBox["a", "1", "2"], "+", 
           SubsuperscriptBox["a", "2", "2"], "+", 
           SubsuperscriptBox["a", "3", "2"]}]]}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.688687720262301*^9, 3.6886878389640903`*^9, 
  3.688786331930509*^9, 3.691470281313258*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "This part tries to see how to get a quadratic form for each vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[VerticalSeparator]", "\[Psi]"}], "\[RightAngleBracket]"}], 
    "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalC]S", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for given maximum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"M", "\[Equal]", 
         RowBox[{
          SubscriptBox["max", 
           RowBox[{
            RowBox[{
             RowBox[{"\[LeftBracketingBar]", "\[Phi]"}], 
             "\[RightAngleBracket]"}], "\[Element]", 
            SuperscriptBox["\[DoubleStruckCapitalC]S", "2"]}]], 
          RowBox[{"f", "(", 
           RowBox[{"\[VerticalSeparator]", "\[Phi]"}]}]}]}], 
        "\[RightAngleBracket]"}], ")"}], "\[Equal]", 
      RowBox[{"f", "(", 
       RowBox[{"\[VerticalSeparator]", "0"}]}]}], "\[RightAngleBracket]"}], 
    ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and minimum ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"m", "\[Equal]", 
         RowBox[{
          SubscriptBox["min", 
           RowBox[{
            RowBox[{
             RowBox[{"\[LeftBracketingBar]", "\[Phi]"}], 
             "\[RightAngleBracket]"}], "\[Element]", 
            SuperscriptBox["\[DoubleStruckCapitalC]S", "2"]}]], 
          RowBox[{"f", "(", 
           RowBox[{"\[VerticalSeparator]", "\[Phi]"}]}]}]}], 
        "\[RightAngleBracket]"}], ")"}], "\[Equal]", 
      RowBox[{"f", "(", 
       RowBox[{"\[VerticalSeparator]", 
        OverscriptBox["0", "_"]}]}]}], "\[RightAngleBracket]"}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Subsection",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQXXvvtdXZ6teODltmuoHorKrUQBB9ZYl9OIhmu+EY
C6LXnSyIB9EVIVlpIFqIfXkliFZxZBY9B6SrNV5IguhnE+WcnwJpCYc0FxDd
WyIZBKLfdPxJBdF+17dlI9NePFr1IPripNo+EK26p3ISiNZiqpgKotOXXZgJ
omvU+WaB6M8Bk+Yj00Izg5eA6HUtoUtBtGW320oQfc1I+zyIbhapuwyiy/qd
roDoF384FJ8B6cQD/7RA9GOZY3og+obEDzD970W8DTLttfXk2udA2qeJbwOI
BgAHCaoi
  "]],

Cell[TextData[{
 "In order to apply Theorem 7, we need the inner product of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", "0"}], "\[RightAngleBracket]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftBracketingBar]", 
     OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is a real number. If ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"0", "\[VerticalSeparator]", 
      OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], "\[Equal]", "0"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"0", "\[VerticalSeparator]", 
      OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], "\[Element]", 
    "\[DoubleStruckCapitalR]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "; otherwise, since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"f", "(", 
          RowBox[{"\[VerticalSeparator]", 
           OverscriptBox["0", "_"]}]}], "\[RightAngleBracket]"}], ")"}], 
       "\[Equal]", 
       RowBox[{"f", "(", 
        RowBox[{"\[VerticalSeparator]", 
         OverscriptBox["0", "_"]}]}]}], "\[RightAngleBracket]"}], 
     FractionBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"0", "\[VerticalSeparator]", 
         OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
       "\[RightBracketingBar]"}], 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"0", "\[VerticalSeparator]", 
        OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}]]}], ")"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"0", "\[VerticalSeparator]", 
        OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
      FractionBox[
       RowBox[{"\[LeftBracketingBar]", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"0", "\[VerticalSeparator]", 
          OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
        "\[RightBracketingBar]"}], 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"0", "\[VerticalSeparator]", 
         OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}]]}], "\[Equal]", 
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"0", "\[VerticalSeparator]", 
        OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
      "\[RightBracketingBar]"}]}], "\[Element]", "\[DoubleStruckCapitalR]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[VerticalSeparator]", 
       OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
     FractionBox[
      RowBox[{"\[LeftBracketingBar]", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"0", "\[VerticalSeparator]", 
         OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
       "\[RightBracketingBar]"}], 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"0", "\[VerticalSeparator]", 
        OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}]]}], "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalC]S", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we can pick ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[VerticalSeparator]", 
      OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
    FractionBox[
     RowBox[{"\[LeftBracketingBar]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"0", "\[VerticalSeparator]", 
        OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], 
      "\[RightBracketingBar]"}], 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"0", "\[VerticalSeparator]", 
       OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}]]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalSeparator]", 
     OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Therefore, we can always pick ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalSeparator]", "0"}], "\[RightAngleBracket]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalSeparator]", 
     OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " as the maximum and minimum point with a real inner product."
}], "Text",
 CellChangeTimes->{
  3.688837565855135*^9, {3.6888405865734196`*^9, 3.6888406194034653`*^9}}],

Cell[TextData[{
 "Then, pick ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[VerticalSeparator]", "\[Psi]"}], "\[RightAngleBracket]"}], 
    "\[Element]", 
    SuperscriptBox["\[DoubleStruckCapitalC]S", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"0", 
      RowBox[{"\[LeftBracketingBar]", "\[Psi]"}]}], "\[RightAngleBracket]"}], 
    "\[Element]", "\[DoubleStruckCapitalR]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      OverscriptBox["0", "_"], 
      RowBox[{"\[LeftBracketingBar]", "\[Psi]"}]}], "\[RightAngleBracket]"}], 
    "\[Element]", "\[DoubleStruckCapitalR]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Then, the real vector space spanned by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalSeparator]", "0"}], "\[RightAngleBracket]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalSeparator]", 
     OverscriptBox["0", "_"]}], "\[RightAngleBracket]"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalSeparator]", "\[Psi]"}], "\[RightAngleBracket]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " has a real inner product. Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              SubsuperscriptBox["S", "\[Psi]", "2"], "=", 
              RowBox[{"{", 
               RowBox[{"\[VerticalSeparator]", "\[Phi]"}]}]}], 
             "\[RightAngleBracket]"}], "\[Element]", 
            RowBox[{"span", 
             RowBox[{"{", 
              RowBox[{"\[VerticalSeparator]", "0"}]}]}]}], 
           "\[RightAngleBracket]"}], ",", 
          RowBox[{"\[VerticalSeparator]", 
           OverscriptBox["0", "_"]}]}], "\[RightAngleBracket]"}], ",", 
        RowBox[{"\[VerticalSeparator]", "\[Psi]"}]}], 
       "\[RightAngleBracket]"}], "}"}], "\[VerticalSeparator]", 
     RowBox[{
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"\[Phi]", 
        RowBox[{"\[LeftBracketingBar]", "\[Phi]"}]}], 
       "\[RightAngleBracket]"}], "\[Equal]", "1"}]}], "}"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6888375797451544`*^9, 3.6888376131892104`*^9}, {
  3.688837844399534*^9, 3.688837960771702*^9}, {3.688838027881796*^9, 
  3.688838063761846*^9}, {3.688838128951937*^9, 3.688838239592092*^9}, {
  3.688838418252342*^9, 3.6888384729224186`*^9}, {3.6888406245034723`*^9, 
  3.6888406545435147`*^9}, {3.6888417290650187`*^9, 3.68884173000502*^9}}],

Cell[TextData[{
 "The problem is still how to pick ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[VerticalSeparator]", 
      SubscriptBox["2", "\[Psi]"]}], "\[RightAngleBracket]"}], "\[Element]", 
    SubsuperscriptBox["S", "\[Psi]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". As before, we need to find a point ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[VerticalSeparator]", 
          SubscriptBox["2", "\[Psi]"]}], "\[RightAngleBracket]"}], 
        "\[Element]", 
        RowBox[{
         SubsuperscriptBox["S", "\[Psi]", "2"], "\[Intersection]", 
         RowBox[{"span", 
          RowBox[{"{", 
           RowBox[{"\[VerticalSeparator]", "0"}]}]}]}]}], 
       "\[RightAngleBracket]"}], ",", 
      RowBox[{"\[VerticalSeparator]", 
       OverscriptBox["0", "_"]}]}], "\[RightAngleBracket]"}], "}"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"0", 
      RowBox[{"\[LeftBracketingBar]", 
       SubscriptBox["2", "\[Psi]"]}]}], "\[RightAngleBracket]"}], "\[Equal]", 
    "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Although there are two opposite points satisfying the given condition, it \
is fine becasue they give the same quadratic form. (And we cannot define \
cross product from the inner prodcut right?) Then, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[VerticalSeparator]", 
      SubscriptBox["1", "\[Psi]"]}], "\[RightAngleBracket]"}], "\[Element]", 
    SubsuperscriptBox["S", "\[Psi]", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"0", 
      RowBox[{"\[LeftBracketingBar]", 
       SubscriptBox["1", "\[Psi]"]}]}], "\[RightAngleBracket]"}], "\[Equal]", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      SubscriptBox["2", "\[Psi]"], 
      RowBox[{"\[LeftBracketingBar]", 
       SubscriptBox["1", "\[Psi]"]}]}], "\[RightAngleBracket]"}], "\[Equal]", 
    "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Now we have a quadratic form ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["Q", "\[Psi]"], "(", 
       RowBox[{"\[VerticalSeparator]", "\[Phi]"}]}], "\[RightAngleBracket]"}],
      ")"}], "=", 
    RowBox[{
     RowBox[{"M", 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"0", 
         RowBox[{"\[LeftBracketingBar]", "\[Phi]"}]}], 
        "\[RightAngleBracket]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"W", "-", "M", "-", "m"}], ")"}], 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         SubscriptBox["1", "\[Psi]"], 
         RowBox[{"\[LeftBracketingBar]", "\[Phi]"}]}], 
        "\[RightAngleBracket]"}], "2"]}], "+", 
     RowBox[{"m", 
      SuperscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         SubscriptBox["2", "\[Psi]"], 
         RowBox[{"\[LeftBracketingBar]", "\[Phi]"}]}], 
        "\[RightAngleBracket]"}], "2"]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and more ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]", "(", 
    RowBox[{"\[Eta]", ",", 
     SubscriptBox["W", "\[CapitalDelta]"], ",", 
     SubscriptBox["\[Omega]", "f"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["f", "\[Psi]"], "'"}], 
            RowBox[{"(", 
             RowBox[{"\[VerticalSeparator]", "\[Phi]"}]}]}], 
           "\[RightAngleBracket]"}], ")"}], "=", 
         RowBox[{"f", "(", 
          RowBox[{"\[VerticalSeparator]", "\[Phi]"}]}]}], 
        "\[RightAngleBracket]"}], ")"}], "-", 
      RowBox[{
       SubscriptBox["Q", "\[Psi]"], "(", 
       RowBox[{"\[VerticalSeparator]", "\[Phi]"}]}]}], 
     "\[RightAngleBracket]"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", and finally ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"\[LeftBracketingBar]", 
           RowBox[{"f", "(", 
            RowBox[{"\[VerticalSeparator]", "\[Psi]"}]}]}], 
          "\[RightAngleBracket]"}], ")"}], "-", 
        RowBox[{
         SubscriptBox["Q", "\[Psi]"], "(", 
         RowBox[{"\[VerticalSeparator]", "\[Psi]"}]}]}], 
       "\[RightAngleBracket]"}], ")"}], "\[RightBracketingBar]"}], 
    "\[LessEqual]", 
    RowBox[{
     RowBox[{"27", 
      RowBox[{"\[Delta]", "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["W", "r"], "-", 
         SubscriptBox["W", "l"]}], ",", 
        RowBox[{
         SubscriptBox["W", "r"], "-", 
         SubscriptBox["W", "l"]}], ",", 
        SubscriptBox["\[Omega]", "f"]}], ")"}]}], "+", 
     RowBox[{"27", 
      RowBox[{"\[Delta]", "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["W", "r"], "-", 
         SubscriptBox["W", "l"]}], ",", 
        RowBox[{
         SubscriptBox["W", "r"], "-", 
         SubscriptBox["W", "l"]}], ",", 
        SubscriptBox["\[Omega]", 
         RowBox[{
          SubscriptBox["f", "\[Psi]"], "'"}]]}], ")"}]}], "+", 
     RowBox[{"18", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["W", "r"], "-", 
        SubscriptBox["W", "l"]}], ")"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". The problem is now ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["Q", "\[Psi]"], " "}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is depened on ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[VerticalSeparator]", "\[Psi]"}], "\[RightAngleBracket]"}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 "! What are those ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Q", "\[Psi]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "? Can we find a ",
 Cell[BoxData[
  FormBox["Q", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " which is close to all these ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Q", "\[Psi]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "?"
}], "Text",
 CellChangeTimes->{{3.6888379806517296`*^9, 3.6888380082317677`*^9}, {
   3.688838522472488*^9, 3.688838524452491*^9}, {3.688838779712848*^9, 
   3.688838915939052*^9}, {3.6888389570391097`*^9, 3.68883905692925*^9}, {
   3.688839308019601*^9, 3.6888394449358063`*^9}, {3.688840170126828*^9, 
   3.688840191196858*^9}, 3.6888402583509555`*^9, {3.6888406638535275`*^9, 
   3.6888406862235594`*^9}, {3.688840927103896*^9, 3.688841000463999*^9}, {
   3.68884103686405*^9, 3.688841141944197*^9}, {3.688841262594366*^9, 
   3.6888413064444275`*^9}, {3.6888413502244887`*^9, 
   3.6888415451047616`*^9}, {3.6888415800548105`*^9, 
   3.6888416551849155`*^9}, {3.688841734965027*^9, 3.6888419050852656`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Alpha]", "0"], ",", 
       SubscriptBox["\[Alpha]", "1"], ",", 
       SubscriptBox["\[Alpha]", "2"]}], "}"}], "\[Cross]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Beta]", "0"], ",", 
       SubscriptBox["\[Beta]", "1"], ",", 
       SubscriptBox["\[Beta]", "2"]}], "}"}]}], ")"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], ",", 
     SubscriptBox["\[Alpha]", "1"], ",", 
     SubscriptBox["\[Alpha]", "2"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Alpha]", "0"], ",", 
       SubscriptBox["\[Alpha]", "1"], ",", 
       SubscriptBox["\[Alpha]", "2"]}], "}"}], "\[Cross]", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Beta]", "0"], ",", 
       SubscriptBox["\[Beta]", "1"], ",", 
       SubscriptBox["\[Beta]", "2"]}], "}"}]}], ")"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Beta]", "0"], ",", 
     SubscriptBox["\[Beta]", "1"], ",", 
     SubscriptBox["\[Beta]", "2"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.688788675327544*^9, {3.6887887110565877`*^9, 3.688788799715658*^9}, {
   3.688788881441333*^9, 3.68878888470852*^9}, {3.6888246455599384`*^9, 
   3.6888246459799395`*^9}, {3.6888256166753073`*^9, 
   3.6888256974354205`*^9}, {3.6888274904779305`*^9, 3.688827497329944*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6887886758765755`*^9, {3.688788779686513*^9, 3.6887888013997545`*^9}, 
   3.6887888861276007`*^9, 3.6888246468499403`*^9, 3.688825699465423*^9, {
   3.6888274926279335`*^9, 3.688827498429946*^9}, 3.6914702813682613`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.6887886758765755`*^9, {3.688788779686513*^9, 3.6887888013997545`*^9}, 
   3.6887888861276007`*^9, 3.6888246468499403`*^9, 3.688825699465423*^9, {
   3.6888274926279335`*^9, 3.688827498429946*^9}, 3.6914702813692617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cross", "[", 
   RowBox[{"a_", ",", "b_", ",", "B_"}], "]"}], ":=", 
  RowBox[{"B", ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Inverse", "[", "B", "]"}], ".", "a"}], ")"}], "\[Cross]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Inverse", "[", "B", "]"}], ".", "b"}], ")"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"cross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"cross", "[", 
    RowBox[{"a_", ",", "b_", ",", "B_"}], "]"}], 
   RowBox[{
    RowBox[{"\[Sigma]", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[Alpha]", "0"], ",", 
        SubscriptBox["\[Alpha]", "1"], ",", 
        SubscriptBox["\[Alpha]", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["\[Beta]", "0"], ",", 
        SubscriptBox["\[Beta]", "1"], ",", 
        SubscriptBox["\[Beta]", "2"]}], "}"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Alpha]", "0"], ",", 
      SubscriptBox["\[Alpha]", "1"], ",", 
      SubscriptBox["\[Alpha]", "2"]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6888275014299498`*^9, 3.688827568720044*^9}, {
  3.68882764804216*^9, 3.6888276569521723`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.688827562860036*^9, 3.6914702813812623`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", "B_", ")"}], ".", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Inverse", "[", "B_", "]"}], ".", 
      RowBox[{"(", "a_", ")"}]}], ")"}], "\[Cross]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Inverse", "[", "B_", "]"}], ".", 
      RowBox[{"(", "b_", ")"}]}], ")"}]}]}], " ", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Alpha]", "0"], ",", 
       SubscriptBox["\[Alpha]", "1"], ",", 
       SubscriptBox["\[Alpha]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Beta]", "0"], ",", 
       SubscriptBox["\[Beta]", "1"], ",", 
       SubscriptBox["\[Beta]", "2"]}], "}"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], ",", 
     SubscriptBox["\[Alpha]", "1"], ",", 
     SubscriptBox["\[Alpha]", "2"]}], "}"}]}]}]], "Output",
 CellChangeTimes->{3.688827562860036*^9, 3.691470281394263*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"\[Psi]_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Norm", "[", "\[Phi]", "]"}], 
   RowBox[{"Normalize", "[", 
    RowBox[{"\[Psi]", "\[Cross]", "\[Phi]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Alpha]", "0"], ",", 
       SubscriptBox["\[Alpha]", "1"], ",", 
       SubscriptBox["\[Alpha]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Beta]", "0"], ",", 
       SubscriptBox["\[Beta]", "1"], ",", 
       SubscriptBox["\[Beta]", "2"]}], "}"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Alpha]", "0"], ",", 
     SubscriptBox["\[Alpha]", "1"], ",", 
     SubscriptBox["\[Alpha]", "2"]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Alpha]", "0"], ",", 
       SubscriptBox["\[Alpha]", "1"], ",", 
       SubscriptBox["\[Alpha]", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Beta]", "0"], ",", 
       SubscriptBox["\[Beta]", "1"], ",", 
       SubscriptBox["\[Beta]", "2"]}], "}"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Beta]", "0"], ",", 
     SubscriptBox["\[Beta]", "1"], ",", 
     SubscriptBox["\[Beta]", "2"]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.688788230519102*^9, 3.6887882968978987`*^9}, {
  3.6887884708278475`*^9, 3.688788554879655*^9}, {3.688788655990438*^9, 
  3.6887886728274007`*^9}, {3.688825311452875*^9, 3.688825319904892*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.688788477249214*^9, 3.688788498418425*^9}, 
   3.6887885570887814`*^9, 3.688788678334716*^9, 3.688825322414895*^9, 
   3.6914702814132643`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.688788477249214*^9, 3.688788498418425*^9}, 
   3.6887885570887814`*^9, 3.688788678334716*^9, 3.688825322414895*^9, 
   3.6914702814142637`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"\[Psi]_", ",", "\[Phi]_", ",", "B_"}], "]"}], ":=", 
  RowBox[{"B", ".", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Inverse", "[", "B", "]"}], ".", "\[Psi]"}], ")"}], "\[Cross]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Inverse", "[", "B", "]"}], ".", "\[Phi]"}], ")"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"\[Sigma]", "[", 
   RowBox[{"\[Psi]_", ",", "\[Phi]_", ",", "B_"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6888250112004504`*^9, 3.688825024600469*^9}, {
   3.688825120290603*^9, 3.6888251269606123`*^9}, {3.6888251621206617`*^9, 
   3.6888251669206686`*^9}, {3.6888252078707256`*^9, 
   3.6888252579028006`*^9}, {3.6888253580449452`*^9, 3.6888254052950115`*^9}, 
   3.688825436895056*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "B_", ")"}], ".", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Inverse", "[", "B_", "]"}], ".", 
      RowBox[{"(", "\[Psi]_", ")"}]}], ")"}], "\[Cross]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Inverse", "[", "B_", "]"}], ".", 
      RowBox[{"(", "\[Phi]_", ")"}]}], ")"}]}], 
   RowBox[{"Norm", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Inverse", "[", "B_", "]"}], ".", 
       RowBox[{"(", "\[Psi]_", ")"}]}], ")"}], "\[Cross]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Inverse", "[", "B_", "]"}], ".", 
       RowBox[{"(", "\[Phi]_", ")"}]}], ")"}]}], "]"}]]}]], "Output",
 CellChangeTimes->{3.691470281429265*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{944, 810},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 120, 1, 70, "Section"],
Cell[703, 25, 161, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[889, 33, 4933, 133, 232, "Input"],
Cell[5825, 168, 3694, 74, 536, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9556, 247, 778, 20, 72, "Input"],
Cell[10337, 269, 869, 16, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11243, 290, 4577, 104, 234, "Input"],
Cell[15823, 396, 11234, 188, 447, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27094, 589, 2102, 49, 112, "Input"],
Cell[29199, 640, 8270, 136, 447, "Output"]
}, Open  ]],
Cell[37484, 779, 8113, 181, 292, "Input"],
Cell[CellGroupData[{
Cell[45622, 964, 280, 7, 31, "Input"],
Cell[45905, 973, 472, 8, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46414, 986, 5330, 120, 159, "Input"],
Cell[51747, 1108, 4175, 80, 500, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55959, 1193, 653, 19, 31, "Input"],
Cell[56615, 1214, 12577, 358, 172, "Print"],
Cell[69195, 1574, 23456, 400, 439, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92688, 1979, 901, 27, 46, "Input"],
Cell[93592, 2008, 13990, 393, 208, "Print"],
Cell[107585, 2403, 46746, 786, 439, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[154380, 3195, 71, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[154476, 3200, 188, 4, 49, "Subsection"],
Cell[CellGroupData[{
Cell[154689, 3208, 553, 17, 67, "Input"],
Cell[155245, 3227, 1420, 43, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156702, 3275, 1430, 43, 62, "Input"],
Cell[158135, 3320, 1855, 59, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160027, 3384, 1249, 39, 44, "Input"],
Cell[161279, 3425, 143, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161459, 3432, 1526, 43, 73, "Input"],
Cell[162988, 3477, 3053, 91, 170, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166078, 3573, 8078, 222, 307, "Input"],
Cell[174159, 3797, 1284, 37, 88, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[175492, 3840, 2201, 65, 82, "Subsection"],
Cell[177696, 3907, 4888, 146, 102, "Text"],
Cell[182587, 4055, 2942, 88, 61, "Text"],
Cell[185532, 4145, 7194, 221, 153, "Text"],
Cell[CellGroupData[{
Cell[192751, 4370, 1550, 43, 52, "Input"],
Cell[194304, 4415, 273, 4, 31, "Output"],
Cell[194580, 4421, 273, 4, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194890, 4430, 1707, 52, 72, "Input"],
Cell[196600, 4484, 149, 3, 31, "Output"],
Cell[196752, 4489, 995, 31, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197784, 4525, 1739, 49, 72, "Input"],
Cell[199526, 4576, 194, 3, 31, "Output"],
Cell[199723, 4581, 194, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199954, 4589, 877, 21, 52, "Input"],
Cell[200834, 4612, 732, 23, 81, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
