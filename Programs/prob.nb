(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     83941,       1759]
NotebookOptionsPosition[     83122,       1728]
NotebookOutlinePosition[     83508,       1744]
CellTagsIndexPosition[     83465,       1741]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
http://mathematica.stackexchange.com/questions/16413/how-to-draw-a-great-\
circle-on-a-sphere\
\>", "Text",
 CellChangeTimes->{3.6768465566438527`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"(*", 
   RowBox[{
   "Rotation", " ", "deg\[Degree]", " ", "out", " ", "of", " ", "the", " ", 
    "xy", " ", "plane"}], "*)"}], 
  RowBox[{
   RowBox[{
    RowBox[{"rx", "=", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{
       RowBox[{"deg", " ", "Degree"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Spin", " ", "around", " ", "z", " ", "axis"}], "*)"}], 
    RowBox[{"rz", "=", 
     RowBox[{"RotationTransform", "[", 
      RowBox[{
       RowBox[{"\[Phi]", " ", "Degree"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}], "=", 
     RowBox[{"rz", "@", 
      RowBox[{"rx", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
             RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "u"}], "}"}], 
              "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "v"}], "}"}], 
              "]"}]}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"ParametricPlot3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", "u"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}], ",", 
            RowBox[{"(*", 
             RowBox[{
             "The", " ", "great", " ", "circle", " ", "in", " ", "question"}],
              "*)"}], 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Normal", " ", "unit", " ", "circle"}], "*)"}], 
            RowBox[{
             RowBox[{"RotationTransform", "[", 
              RowBox[{"\[Theta]", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "/@", 
             RowBox[{"{", 
              RowBox[{"u", ",", 
               RowBox[{"-", "u"}]}], "}"}]}]}], " ", 
           RowBox[{"(*", 
            RowBox[{"The", " ", "red", " ", "dashed", " ", "stuff"}], "*)"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", 
            RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", "Thick"}], "]"}], ",", "Black", ",", 
             RowBox[{"Directive", "[", 
              RowBox[{"Red", ",", "Dashed"}], "]"}]}], "}"}]}]}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
     "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"deg", ",", "15", ",", "\"\<Inclination\>\""}], "}"}], ",", 
     RowBox[{"-", "180"}], ",", "180"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", "360"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676846523128338*^9, 3.6768465231533384`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`deg$$ = 15, $CellContext`\[Phi]$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`deg$$], 15, "Inclination"}, -180, 180}, {
      Hold[$CellContext`\[Phi]$$], 0, 360}}, Typeset`size$$ = {
    360., {199., 203.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`deg$1972$$ = 
    0, $CellContext`\[Phi]$1973$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`deg$$ = 15, $CellContext`\[Phi]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`deg$$, $CellContext`deg$1972$$, 0], 
        Hold[$CellContext`\[Phi]$$, $CellContext`\[Phi]$1973$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`rx = 
        RotationTransform[$CellContext`deg$$ Degree, {0, 1, 
          0}]; $CellContext`rz = 
        RotationTransform[$CellContext`\[Phi]$$ Degree, {0, 0, 
          1}]; {$CellContext`u, $CellContext`v} = $CellContext`rz[
          $CellContext`rx[{{1, 0, 0}, {0, 1, 0}}]]; Show[{
          Graphics3D[{{
             Opacity[0.4], 
             Sphere[]}, {
             Opacity[0.5], 
             Polygon[{{-1, -1, 0}, {1, -1, 0}, {1, 1, 0}, {-1, 1, 0}}]}, {
             Arrow[{{0, 0, 0}, $CellContext`u}], 
             Arrow[{{0, 0, 0}, $CellContext`v}]}}], 
          
          ParametricPlot3D[{
           Cos[$CellContext`\[Theta]] $CellContext`u + 
            Sin[$CellContext`\[Theta]] $CellContext`v, {
             Cos[$CellContext`\[Theta]], 
             Sin[$CellContext`\[Theta]], 0}, 
            Map[
             
             RotationTransform[$CellContext`\[Theta], {0, 0, 
              1}], {$CellContext`u, -$CellContext`u}]}, \
{$CellContext`\[Theta], -Pi, Pi}, PlotStyle -> {
             Directive[Blue, Thick], Black, 
             Directive[Red, Dashed]}]}, Axes -> True, 
         AxesLabel -> {"x", "y", "z"}]), 
      "Specifications" :> {{{$CellContext`deg$$, 15, "Inclination"}, -180, 
         180}, {$CellContext`\[Phi]$$, 0, 360}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{407., {256., 263.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6768465254633737`*^9, 3.6768465608514175`*^9, 
  3.6768937917299557`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"orthoComplement", "[", "n_List", "]"}], ":=", 
  RowBox[{"Complement", "[", 
   RowBox[{
    RowBox[{"Orthogonalize", "[", 
     RowBox[{"Prepend", "[", 
      RowBox[{
       RowBox[{"IdentityMatrix", "[", "3", "]"}], ",", "n"}], "]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], "}"}], ",", 
    RowBox[{"Orthogonalize", "[", 
     RowBox[{"{", "n", "}"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"orthoComplement", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676849228037901*^9, 3.6768493044940753`*^9}, {
  3.67684944544374*^9, 3.6768494522388444`*^9}, {3.6768495950835385`*^9, 
  3.676849601166132*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.676849602061146*^9, 3.676893792154962*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graphicNormalOrthoComplement", "[", 
   RowBox[{"\[Psi]_List", ",", "style_RGBColor"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", "=", 
      RowBox[{"orthoComplement", "[", "\[Psi]", "]"}]}], "}"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"style", ",", 
          RowBox[{"Arrow", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"Normalize", "[", "\[Psi]", "]"}]}], "}"}], "]"}]}], 
         "}"}], "]"}], ",", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{
            "u", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
            RowBox[{
            "u", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
          RowBox[{"(*", 
           RowBox[{
           "The", " ", "great", " ", "circle", " ", "in", " ", "question"}], 
           "*)"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", 
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "style"}]}], "]"}]}], "}"}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"graphicNormalOrthoComplement", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", "Blue"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6768494579639325`*^9, 3.6768494687715983`*^9}, {
   3.6768495010070934`*^9, 3.6768497821589117`*^9}, {3.67684990183575*^9, 
   3.676849909550869*^9}, {3.6768499457939253`*^9, 3.6768500140999746`*^9}, 
   3.6768514361318316`*^9, {3.676852165033027*^9, 3.6768521780082264`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Arrow3DBox[{{0, 0, 0}, {1, 0, 0}}]}, {{}, {}, 
    {RGBColor[0, 0, 1], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
wE+pZ/y/Sf7/e3a5/+3Z/w8Btbmj
      "]]}}}]], "Output",
 CellChangeTimes->{
  3.6768497196304517`*^9, {3.6768497549384937`*^9, 3.6768497836864357`*^9}, 
   3.6768499107483873`*^9, 3.67684994997149*^9, {3.676849995499689*^9, 
   3.6768500158875017`*^9}, 3.67685143799186*^9, 3.6768521810732737`*^9, 
   3.6768937921824627`*^9}]
}, Closed]],

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Epsilon]", "=", 
      FractionBox["1", "4"]}], ",", "\[Psi]s", ",", "\[Phi]s", ",", 
     RowBox[{"styleMatrix", "=", 
      RowBox[{"Function", "[", 
       RowBox[{"\[Psi]", ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"MatrixForm", "[", 
           RowBox[{"Normalize", "[", 
            RowBox[{
            "\[Psi]", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "]"}], ",", 
          RowBox[{
          "\[Psi]", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "]"}]}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]s", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}]}], "}"}], ",", "Red"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "1"}], "}"}], ",", 
         "Green"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "1", ",", "1"}], "}"}], ",",
          "Blue"}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"\[Phi]s", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Normalize", "[", 
          RowBox[{
           RowBox[{"\[Psi]s", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "\[Cross]", 
           RowBox[{"\[Psi]s", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", "3", ",", "1"}], "]"}], ",", 
             "1"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"Blend", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\[Psi]s", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"\[Psi]s", "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "3", ",", "1"}], "]"}], ",", 
              "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"styleMatrix", "[", 
          RowBox[{
          "\[Psi]s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
          "]"}], "\[Cross]", 
         RowBox[{"styleMatrix", "[", 
          RowBox[{"\[Psi]s", "\[LeftDoubleBracket]", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "3", ",", "1"}], "]"}], 
           "\[RightDoubleBracket]"}], "]"}]}], "\[Equal]", 
        RowBox[{"styleMatrix", "[", 
         RowBox[{
         "\[Phi]s", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "3"}], "}"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"graphicNormalOrthoComplement", "[", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}], "&"}], "/@", "\[Psi]s"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.4", "]"}], ",", 
             RowBox[{"Sphere", "[", "]"}]}], "}"}], ",", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Phi]s", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"\[Phi]s", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"-", 
                   RowBox[{"\[Phi]s", "\[LeftDoubleBracket]", 
                    RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                 "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}], 
        "]"}]}], "]"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6768498034267387`*^9, 3.6768498799854145`*^9}, {
   3.6768510963971124`*^9, 3.676851109012306*^9}, {3.6768511400977836`*^9, 
   3.67685126552221*^9}, {3.6768512986872206`*^9, 3.676851397446237*^9}, {
   3.6768514718623805`*^9, 3.6768516098745003`*^9}, {3.676851640082464*^9, 
   3.6768516592452583`*^9}, {3.6768518294178724`*^9, 
   3.6768520829617667`*^9}, {3.6768521144472504`*^9, 3.676852132447527*^9}, {
   3.67685218670836*^9, 3.6768522108162303`*^9}, 3.676852252169366*^9, {
   3.67685228824992*^9, 3.6768523276355247`*^9}, {3.676854524934492*^9, 
   3.676854888875082*^9}, {3.676893764094531*^9, 3.676893784804849*^9}, {
   3.6768939247644987`*^9, 3.676893933689636*^9}, {3.6768942425143795`*^9, 
   3.6768943034278154`*^9}, {3.676894334533293*^9, 3.676894382064023*^9}, 
   3.6768944555676517`*^9, {3.676894487688145*^9, 3.6768945435615034`*^9}, {
   3.6768949539053063`*^9, 3.6768950215538454`*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]]}], "\[Equal]", 
    StyleBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           FractionBox["7", "9"]},
          {
           RowBox[{"-", 
            FractionBox["4", "9"]}]},
          {
           RowBox[{"-", 
            FractionBox["4", "9"]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[1, 2], 
       Rational[1, 2], 0],
     FrontFaceColor->RGBColor[
       Rational[1, 2], 
       Rational[1, 2], 0],
     BackFaceColor->RGBColor[
       Rational[1, 2], 
       Rational[1, 2], 0],
     GraphicsColor->RGBColor[
       Rational[1, 2], 
       Rational[1, 2], 0],
     FontColor->RGBColor[
       Rational[1, 2], 
       Rational[1, 2], 0]]}], ",", 
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 1, 0],
      FrontFaceColor->RGBColor[0, 1, 0],
      BackFaceColor->RGBColor[0, 1, 0],
      GraphicsColor->RGBColor[0, 1, 0],
      FontColor->RGBColor[0, 1, 0]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]]}], "\[Equal]", 
    StyleBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox["4", "9"]}]},
          {
           RowBox[{"-", 
            FractionBox["4", "9"]}]},
          {
           FractionBox["7", "9"]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     StripOnInput->False,
     LineColor->RGBColor[0, 
       Rational[1, 2], 
       Rational[1, 2]],
     FrontFaceColor->RGBColor[0, 
       Rational[1, 2], 
       Rational[1, 2]],
     BackFaceColor->RGBColor[0, 
       Rational[1, 2], 
       Rational[1, 2]],
     GraphicsColor->RGBColor[0, 
       Rational[1, 2], 
       Rational[1, 2]],
     FontColor->RGBColor[0, 
       Rational[1, 2], 
       Rational[1, 2]]]}], ",", 
   RowBox[{
    RowBox[{
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["3", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontColor->RGBColor[0, 0, 1]], "\[Cross]", 
     StyleBox[
      TagBox[
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["4", 
             SqrtBox["41"]]},
           {
            FractionBox["3", 
             SqrtBox["41"]]}
          },
          
          GridBoxAlignment->{
           "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}}],
         Column], "\[NoBreak]", ")"}],
       Function[BoxForm`e$, 
        MatrixForm[BoxForm`e$]]],
      StripOnInput->False,
      LineColor->RGBColor[1, 0, 0],
      FrontFaceColor->RGBColor[1, 0, 0],
      BackFaceColor->RGBColor[1, 0, 0],
      GraphicsColor->RGBColor[1, 0, 0],
      FontColor->RGBColor[1, 0, 0]]}], "\[Equal]", 
    StyleBox[
     TagBox[
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {
           RowBox[{"-", 
            FractionBox["4", "9"]}]},
          {
           FractionBox["7", "9"]},
          {
           RowBox[{"-", 
            FractionBox["4", "9"]}]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]],
     StripOnInput->False,
     LineColor->RGBColor[
       Rational[1, 2], 0, 
       Rational[1, 2]],
     FrontFaceColor->RGBColor[
       Rational[1, 2], 0, 
       Rational[1, 2]],
     BackFaceColor->RGBColor[
       Rational[1, 2], 0, 
       Rational[1, 2]],
     GraphicsColor->RGBColor[
       Rational[1, 2], 0, 
       Rational[1, 2]],
     FontColor->RGBColor[
       Rational[1, 2], 0, 
       Rational[1, 2]]]}]}], "}"}]], "Print",
 CellChangeTimes->{3.676854852839528*^9, 3.6768548904026055`*^9, 
  3.676893792214963*^9, 3.6768939359121704`*^9, 3.6768944082469254`*^9, 
  3.6768944586001987`*^9, 3.676895047934251*^9}],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        4 41^Rational[-1, 2], 4 41^Rational[-1, 2], 3 41^Rational[-1, 2]}}, {{
        0, 0, 0}, {0.6246950475544243, 0.6246950475544243, 
        0.4685212856658182}}]]}, {{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
fJ10+L//06r9bQj47/+0/wNAy9cf
       "]]}}}, {
    {RGBColor[0, 1, 0], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        4 41^Rational[-1, 2], 3 41^Rational[-1, 2], 4 41^Rational[-1, 2]}}, {{
        0, 0, 0}, {0.6246950475544243, 0.4685212856658182, 
        0.6246950475544243}}]]}, {{}, {}, 
     {RGBColor[0, 1, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
       "]]}}}, {
    {RGBColor[0, 0, 1], 
     Arrow3DBox[
      NCache[{{0, 0, 0}, {
        3 41^Rational[-1, 2], 4 41^Rational[-1, 2], 4 41^Rational[-1, 2]}}, {{
        0, 0, 0}, {0.4685212856658182, 0.6246950475544243, 
        0.6246950475544243}}]]}, {{}, {}, 
     {RGBColor[0, 0, 1], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
TBzbtMm0k3StYFwtQ3BRS+xPptMUA3sCSuL+642ZWuvTp01wMfbV/JWL+xjY
Vs5i/7fefRNVb1SCh3PnlTEoDQy82vZcjkZ6yu3S50eleaj4Urs8uoCB7fWK
5rWkf9edu65NkYdnt50TmCcy8N8WcMgn3cgugGWmzsNQg9o9gisM3OCs6JTw
X3+enhv/RJfcz7M3S972ZqDszRzrc6SXHT13SMyYh1PNC+X0dpLngUBipT3p
OsFXLA8CD6N09hscWMLA1KSVxYPkdc6M3qYhuZuH1yNs7c8X0fFaZsLsXrLv
+SmYbzc5z8Olz00tvifR8U9W2tn7pDfPz3a7cJWH/+Z+yzkcRkd9+b4GM9Kl
z273eXuTh+d+XVxnZk/H/vKTO4LJeVDaohSsnsJD/29aZ14JaJigqx31huyB
jQYhys3lPPR54bYiTJGGyfI44+cwAT/flyYcmtOFmua/V70ke0u+c/gZS9LD
QeLKIdkuPF1kqljdR/YZk4iGGz8IKI9bsMl9aRf23GouH86nomHh2L4Z30nn
ZOyy1evCR5o3RxbaUdE8ifq5iNynVauW7xh06MKDDRsCTwZTsOjEGYOfvQSc
fczk+zzswi0Z+zYlU1vxRQD9l6CF7JPxo2V6y7txXec8iaHiVqw/EHDEqZmc
Q+3Vam463UhfN+2jeXIrHv+0pLSEPJd+2447h6/rRow7ovjFqxWXNnqsPlNP
QKFcu0b11m68vIBy++VQC0omyOlGkOeeuV+f/CyfbjxucetGyKwWbLNz+nuw
iLw+C6/OvZvfjZ/vrdW7fbIRs5buHqi9S4BzC9M/ZUMPytYFtwXMq8FPReJK
KYYEzOHGHJXf1IsLLm2UmUmvxsaACeLqWvL7l+Koh20vEkplqvdSq7HXvSXX
YzUBNiXZwS8cyPUzl/cnrqnG+wX6ayVXEvA0LMRZ2aMX9/5TeXbGsQq7h34p
LFlKnmPf7unQLvai2LP9X03iK/BjmshAQYwAN/ENpTuLejE5aaXuer1SdPnw
525yjQA6hLQd7sv70KvRX/qfdTYaLM+k/NwogNSGXs4TYR9GNLx3Xfc3Exw+
52gcHCGfv37fYszXC3CjzBa9j6IssLG28Zk51Afy54/pK1sI0PFVsbo5Oxvm
bS8PTxf0AYvvaztuJcB9hu9Oq33MgUevLpiy2vtAau1reup2AYrUF93ZvCEf
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
       "]]}}}, 
   {Opacity[0.4], SphereBox[{0, 0, 0}], 
    {RGBColor[
      NCache[
       Rational[1, 2], 0.5], 
      NCache[
       Rational[1, 2], 0.5], 0], 
     Line3DBox[
      NCache[{{Rational[7, 9], Rational[-4, 9], Rational[-4, 9]}, {
        Rational[-7, 9], Rational[4, 9], Rational[4, 9]}}, {{
       0.7777777777777778, -0.4444444444444444, -0.4444444444444444}, \
{-0.7777777777777778, 0.4444444444444444, 0.4444444444444444}}]]}, 
    {RGBColor[0, 
      NCache[
       Rational[1, 2], 0.5], 
      NCache[
       Rational[1, 2], 0.5]], 
     Line3DBox[
      NCache[{{Rational[-4, 9], Rational[-4, 9], Rational[7, 9]}, {
        Rational[4, 9], Rational[4, 9], 
         Rational[-7, 9]}}, {{-0.4444444444444444, -0.4444444444444444, 
       0.7777777777777778}, {0.4444444444444444, 
       0.4444444444444444, -0.7777777777777778}}]]}, 
    {RGBColor[
      NCache[
       Rational[1, 2], 0.5], 0, 
      NCache[
       Rational[1, 2], 0.5]], 
     Line3DBox[
      NCache[{{Rational[-4, 9], Rational[7, 9], Rational[-4, 9]}, {
        Rational[4, 9], Rational[-7, 9], Rational[
         4, 9]}}, {{-0.4444444444444444, 
       0.7777777777777778, -0.4444444444444444}, {
       0.4444444444444444, -0.7777777777777778, 0.4444444444444444}}]]}}},
  ImageSize->{604.8613443546036, 576.},
  ViewPoint->{2.6355256496147956`, -1.7644100199562345`, 1.1793480536722616`},
  ViewVertical->{0.6470132230013844, 0.30114396556212153`, 
   0.7004899722814601}]], "Output",
 CellChangeTimes->{
  3.6768498812679343`*^9, 3.6768499148559504`*^9, 3.6768500202875695`*^9, {
   3.676851239291807*^9, 3.6768512667547293`*^9}, {3.6768513214375696`*^9, 
   3.6768513438204136`*^9}, 3.6768516625778093`*^9, {3.67685203891609*^9, 
   3.676852054468829*^9}, {3.6768520886618543`*^9, 3.6768521338400483`*^9}, {
   3.676852193893471*^9, 3.6768522124437556`*^9}, 3.676852253889392*^9, {
   3.676852311000269*^9, 3.6768523294205523`*^9}, 3.6768523777462945`*^9, 
   3.6768548528995295`*^9, 3.6768548904651065`*^9, 3.676893792277464*^9, 
   3.676893935982171*^9, 3.6768944083194265`*^9, 3.6768944587077003`*^9, 
   3.676895047996752*^9}]
},
WindowSize->{1103, 810},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingPageRange->{Automatic, Automatic},
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 161, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[744, 28, 4933, 133, 212, "Input"],
Cell[5680, 163, 3079, 65, 536, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[8796, 233, 778, 20, 46, "Input"],
Cell[9577, 255, 255, 7, 31, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[9869, 267, 2022, 51, 106, "Input"],
Cell[11894, 320, 7577, 126, 447, "Output"]
}, Closed]],
Cell[19486, 449, 5812, 142, 149, "Input"],
Cell[25301, 593, 44, 1, 4, "PageBreak",
 PageBreakBelow->True],
Cell[25348, 596, 11034, 341, 98, "Print"],
Cell[36385, 939, 46733, 787, 591, "Output"]
}
]
*)

(* End of internal cache information *)
